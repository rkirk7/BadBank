{"ast":null,"code":"import React from \"react\";\nimport { Card, CurrentUser, UserContext, AllActivity } from \"./context\";\nexport default function Deposit() {\n  const currentUser = React.useContext(CurrentUser);\n  const ctx = React.useContext(UserContext);\n  const allActivity = React.useContext(AllActivity);\n  const [deposit, setDeposit] = React.useState(0);\n  const [balance, setBalance] = React.useState(4);\n  const [formFilled, setFormFilled] = React.useState(true);\n  const [depositComplete, setDepositComplete] = React.useState(false);\n  console.log(currentUser.email);\n  const url = \"/account/balance/\".concat(currentUser.email);\n  (async () => {\n    var res = await fetch(url);\n    var data = await res.json();\n    setBalance(data.balance);\n  })();\n  function makeDeposit() {\n    if (isNaN(Number(deposit))) {\n      alert('Your deposit must be a valid number.');\n      return;\n    }\n    if (Number(deposit) <= 0) {\n      alert('Your deposit cannot be a negative number.');\n      return;\n    }\n    let newBalance = Number(deposit) + Number(balance);\n    const url = \"/account/updateBalance/\".concat(currentUser.email, \"/\").concat(newBalance);\n    (async () => {\n      console.log('trying to update balance');\n      var res = await fetch(url);\n      console.log('res:', res);\n      setBalance(newBalance);\n      currentUser.balance = newBalance;\n    })();\n    setBalance(newBalance);\n    currentUser.balance = newBalance;\n    setDepositComplete(true);\n    let date = new Date();\n    //   allActivity.push({key:allActivity.length, userID:currentUser.key, name:currentUser.name, activity: `${currentUser.name} deposited $${deposit}`, balance:newBalance, time:date})\n  }\n  React.useEffect(() => {\n    setFormFilled(deposit != '0' && deposit != '');\n  }, [deposit]);\n  return /*#__PURE__*/React.createElement(Card, {\n    bgcolor: \"primary\",\n    txtcolor: \"white\",\n    header: \"Make a Deposit\",\n    text: currentUser.name != '' ? \"\".concat(currentUser.name, \", your balance is $\").concat(balance, \".\") : \"Please log in or create an account to make a deposit.\",\n    title: depositComplete && \"You have successfully deposited $\".concat(deposit, \"!\"),\n    centered: currentUser.name != '' ? /*#__PURE__*/React.createElement(React.Fragment, null, \"Deposit Amount\", /*#__PURE__*/React.createElement(\"br\", null), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"input\",\n      className: \"form-control\",\n      id: \"deposit\",\n      placeholder: \"Enter Deposit Amount\",\n      value: deposit,\n      onChange: e => setDeposit(e.currentTarget.value)\n    }), \" \", /*#__PURE__*/React.createElement(\"br\", null), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-light\",\n      onClick: makeDeposit,\n      disabled: !formFilled\n    }, \"Make Deposit\"), \" \", /*#__PURE__*/React.createElement(\"br\", null)) : /*#__PURE__*/React.createElement(React.Fragment, null)\n  });\n}","map":{"version":3,"names":["React","Card","CurrentUser","UserContext","AllActivity","Deposit","currentUser","useContext","ctx","allActivity","deposit","setDeposit","useState","balance","setBalance","formFilled","setFormFilled","depositComplete","setDepositComplete","console","log","email","url","concat","res","fetch","data","json","makeDeposit","isNaN","Number","alert","newBalance","date","Date","useEffect","createElement","bgcolor","txtcolor","header","text","name","title","centered","Fragment","type","className","id","placeholder","value","onChange","e","currentTarget","onClick","disabled"],"sources":["/Users/Regan/Documents/GitHub/BadBank/public/src/Components/deposit.js"],"sourcesContent":["import React from \"react\";\nimport { Card, CurrentUser, UserContext, AllActivity } from \"./context\";\n\n\nexport default function Deposit(){\n    const currentUser = React.useContext(CurrentUser);\n    const ctx = React.useContext(UserContext);\n    const allActivity = React.useContext(AllActivity);\n\n\n    const [deposit, setDeposit] = React.useState(0);\n    const [balance, setBalance] = React.useState(4);\n    const [formFilled, setFormFilled] = React.useState(true);\n    const [depositComplete, setDepositComplete] = React.useState(false);\n\n    console.log(currentUser.email);\n    const url = `/account/balance/${currentUser.email}`;\n    (async () => {\n       var res = await fetch(url);\n       var data = await res.json();\n       setBalance(data.balance);\n    })();\n\n\n    function makeDeposit() {\n        if (isNaN(Number(deposit))) {\n            alert('Your deposit must be a valid number.'); \n            return;\n        }\n        if ((Number(deposit)) <= 0) {\n            alert('Your deposit cannot be a negative number.'); \n            return;\n        }\n        let newBalance = Number(deposit) + Number(balance)\n\n        const url = `/account/updateBalance/${currentUser.email}/${newBalance}`;\n    (async () => {\n        console.log('trying to update balance');\n       var res = await fetch(url);\n       console.log('res:', res);\n       setBalance(newBalance);\n        currentUser.balance = newBalance;\n    })();\n\n\n        setBalance(newBalance);\n        currentUser.balance = newBalance;\n\n        setDepositComplete(true);\n        let date = new Date();\n     //   allActivity.push({key:allActivity.length, userID:currentUser.key, name:currentUser.name, activity: `${currentUser.name} deposited $${deposit}`, balance:newBalance, time:date})\n    }\n    \n\n    React.useEffect(() =>{\n        setFormFilled(deposit != '0' && deposit != ''); \n    }, [deposit])\n\n\n    return (\n        <Card \n        bgcolor=\"primary\"\n        txtcolor=\"white\"\n        header=\"Make a Deposit\"\n        text={currentUser.name != '' ? `${currentUser.name}, your balance is $${balance}.` : \"Please log in or create an account to make a deposit.\"}       \n        title={depositComplete && `You have successfully deposited $${deposit}!`}       \n        centered={currentUser.name != '' ? (\n            <>\n            Deposit Amount<br/>\n            <input type=\"input\" className=\"form-control\" id=\"deposit\" placeholder=\"Enter Deposit Amount\" value={deposit} onChange={e => setDeposit(e.currentTarget.value)} /> <br />\n            <button type=\"submit\" className=\"btn btn-light\" onClick={makeDeposit} disabled={!formFilled}>Make Deposit</button> <br />\n        </>\n        ) : (\n            <>\n            </>\n        )}\n        />\n     );\n }"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}