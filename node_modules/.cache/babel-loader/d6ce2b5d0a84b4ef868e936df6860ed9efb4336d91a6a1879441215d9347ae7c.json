{"ast":null,"code":"import React, { useEffect } from \"react\";\nimport { Table, CurrentUser } from \"./context\";\nimport { useNavigate } from \"react-router-dom\";\nimport { checkAuthorization } from \"./firebase\";\nexport default function AllData() {\n  const navigate = useNavigate();\n  const {\n    currentUser,\n    setCurrentUser\n  } = React.useContext(CurrentUser);\n  const [loading, setLoading] = React.useState(true);\n  const [showAllUsers, setShowAllUsers] = React.useState(true);\n  const [showActivity, setShowActivity] = React.useState(true);\n  const [userSearch, setUserSearch] = React.useState('');\n  const [activitySearch, setActivitySearch] = React.useState('');\n  const [loggedIn, setLoggedIn] = React.useState(false);\n  const [userList, setUserList] = React.useState([]);\n  const [activityList, setActivityList] = React.useState([]);\n  useEffect(() => {\n    async function loadPage() {\n      if (!currentUser.email) {\n        let res = await checkAuthorization(setCurrentUser);\n        if (!res) {\n          navigate('/');\n        }\n      }\n      let response = getTheData();\n      setUserList(response.userList);\n      setActivityList(response.activityList);\n      setLoading(false);\n    }\n    loadPage();\n  }, []);\n  async function getTheData() {\n    let userList = [];\n    let activityList = [];\n    if (currentUser.role === 'admin') {\n      let accountRes = await fetch('/account/all');\n      let data = await accountRes.json();\n      let userSearchQuery = data.filter(user => user.email && user.email.toLowerCase().includes(userSearch.toLowerCase())) || [];\n      userList = userSearchQuery.map(user => /*#__PURE__*/React.createElement(\"tr\", {\n        key: user._id\n      }, /*#__PURE__*/React.createElement(\"td\", null, user.name), /*#__PURE__*/React.createElement(\"td\", null, \"$\", user.balance), /*#__PURE__*/React.createElement(\"td\", null, user.email), /*#__PURE__*/React.createElement(\"td\", null, user._id)));\n    }\n    if (currentUser.role !== '') {\n      let res = await fetch(\"/account/getActivity/\".concat(currentUser.email, \"/\").concat(currentUser.role));\n      let activityData = await res.json();\n      let activitySearchQuery = activityData.filter(account => account.email && account.email.toLowerCase().includes(activitySearch.toLowerCase())) || [];\n      activityList = activitySearchQuery.slice().reverse().map(account => /*#__PURE__*/React.createElement(\"tr\", {\n        key: account._id\n      }, /*#__PURE__*/React.createElement(\"td\", null, account.email), /*#__PURE__*/React.createElement(\"td\", null, account.activity), /*#__PURE__*/React.createElement(\"td\", null, new Date(account.date).toLocaleString())));\n    }\n    return {\n      activityList,\n      userList\n    };\n  }\n  return /*#__PURE__*/React.createElement(React.Fragment, null, !loading && /*#__PURE__*/React.createElement(\"div\", null, currentUser.role === \"admin\" && /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"tableheader\"\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    className: \"myLink\",\n    onClick: () => setShowAllUsers(!showAllUsers)\n  }, \"Admin: All Users\")), showAllUsers && /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'center',\n      marginBottom: '10px'\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Search by Email\",\n    value: userSearch,\n    onChange: e => {\n      setUserSearch(e.currentTarget.value);\n    }\n  })), showAllUsers && /*#__PURE__*/React.createElement(Table, {\n    id: \"usertable\",\n    col1: \"Name\",\n    col2: \"Balance\",\n    col3: \"Email\",\n    col4: \"ID\",\n    list: userList\n  })), /*#__PURE__*/React.createElement(\"div\", null, currentUser.role === \"admin\" ? /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"tableheader\"\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    className: \"myLink\",\n    onClick: () => setShowActivity(!showActivity)\n  }, \"Admin: All Bank Activity\")), showActivity && /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'center',\n      marginBottom: '10px'\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Search by Email\",\n    value: activitySearch,\n    onChange: e => {\n      setActivitySearch(e.currentTarget.value);\n    }\n  }))) : /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"tableheader\"\n  }, \"My Activity\"), showActivity && /*#__PURE__*/React.createElement(Table, {\n    id: \"activitytable\",\n    col1: \"Email\",\n    col2: \"Activity\",\n    col3: \"Date\",\n    list: activityList\n  }))), \";\");\n}","map":{"version":3,"names":["React","useEffect","Table","CurrentUser","useNavigate","checkAuthorization","AllData","navigate","currentUser","setCurrentUser","useContext","loading","setLoading","useState","showAllUsers","setShowAllUsers","showActivity","setShowActivity","userSearch","setUserSearch","activitySearch","setActivitySearch","loggedIn","setLoggedIn","userList","setUserList","activityList","setActivityList","loadPage","email","res","response","getTheData","role","accountRes","fetch","data","json","userSearchQuery","filter","user","toLowerCase","includes","map","createElement","key","_id","name","balance","concat","activityData","activitySearchQuery","account","slice","reverse","activity","Date","date","toLocaleString","Fragment","className","onClick","style","display","justifyContent","marginBottom","type","placeholder","value","onChange","e","currentTarget","id","col1","col2","col3","col4","list"],"sources":["/Users/Regan/Documents/GitHub/BadBank/public/src/Components/alldata.js"],"sourcesContent":["import React, {useEffect} from \"react\";\nimport {Table, CurrentUser} from \"./context\";\nimport { useNavigate } from \"react-router-dom\";\nimport { checkAuthorization } from \"./firebase\";\n\nexport default function AllData(){\n  const navigate = useNavigate();\n\n  const { currentUser, setCurrentUser } = React.useContext(CurrentUser);\n  const [loading, setLoading] = React.useState(true);\n  const [showAllUsers, setShowAllUsers] = React.useState(true);\n  const [showActivity, setShowActivity] = React.useState(true);\n  const [userSearch, setUserSearch] = React.useState('');\n  const [activitySearch, setActivitySearch] = React.useState('');\n  const [loggedIn, setLoggedIn] = React.useState(false);\n  const [userList, setUserList] = React.useState([]);\n  const [activityList, setActivityList] = React.useState([]);\n\n\n  useEffect(() => {\n    async function loadPage() {\n        if (!currentUser.email) {\n          let res = await checkAuthorization(setCurrentUser);\n          if (!res) {\n            navigate('/');\n          }\n        } \n        let response = getTheData();\n        setUserList(response.userList);\n        setActivityList(response.activityList);\n        setLoading(false);\n    }\n    loadPage();\n}, []);\n\nasync function getTheData() {\n  let userList = [];\n  let activityList = [];\n\n  if (currentUser.role === 'admin') {\n    let accountRes = await fetch('/account/all');\n    let data = await accountRes.json()\n  let userSearchQuery = data.filter((user) =>\n     user.email && user.email.toLowerCase().includes(userSearch.toLowerCase())\n  ) || [];\n  \nuserList = userSearchQuery.map(user => (\n    <tr key={user._id}>\n      <td>{user.name}</td>\n      <td>${user.balance}</td>\n      <td>{user.email}</td>\n      <td>{user._id}</td>\n    </tr>\n  ));\n}\n\nif (currentUser.role !== '') {\n  let res = await fetch(`/account/getActivity/${currentUser.email}/${currentUser.role}`)\n  let activityData = await res.json();\n\nlet activitySearchQuery = activityData.filter((account) =>\n  account.email && account.email.toLowerCase().includes(activitySearch.toLowerCase())\n) || [];\n\nactivityList = activitySearchQuery.slice().reverse().map(account => (\n  <tr key={account._id}>\n    <td>{account.email}</td>\n    <td>{account.activity}</td>\n    <td>{new Date(account.date).toLocaleString()}</td>\n  </tr>\n));\n}\n\nreturn {\n  activityList, \n  userList\n}\n}\n\nreturn (\n  <>\n      {!loading && (\n  <div>\n      {currentUser.role === \"admin\" && (\n        <div>\n         <h1 className=\"tableheader\"><a  className=\"myLink\" onClick={ () => setShowAllUsers(!showAllUsers) }>Admin: All Users</a></h1>\n        { showAllUsers && ( <div style={{ display: 'flex', justifyContent: 'center', marginBottom: '10px' }}>\n         <input type=\"text\" placeholder=\"Search by Email\" value={userSearch} onChange={e => {\n                setUserSearch(e.currentTarget.value);\n                }}></input>\n                </div>\n                )}\n      \n      {showAllUsers && (\n      \n  <Table\n  id=\"usertable\"\n  col1=\"Name\"\n  col2=\"Balance\"\n  col3=\"Email\"\n  col4=\"ID\"\n  list={userList}\n  />\n      )}\n      </div>\n     )}\n     <div>\n     {currentUser.role === \"admin\" ? (\n      <div>\n     <h1 className=\"tableheader\"><a className=\"myLink\" onClick= { () => setShowActivity(!showActivity)}>Admin: All Bank Activity</a></h1>\n     {showActivity && (\n      <div style={{ display: 'flex', justifyContent: 'center', marginBottom: '10px' }}>\n        <input type=\"text\" placeholder=\"Search by Email\" value={activitySearch} onChange={e => {setActivitySearch(e.currentTarget.value);\n        }}>\n        </input>\n        </div>\n              )}\n     </div>\n     \n     ) : (\n      <h1 className=\"tableheader\">My Activity</h1>\n     ) }\n\n      {showActivity && (\n\n<Table\n  id=\"activitytable\"\n  col1=\"Email\"\n  col2=\"Activity\"\n  col3=\"Date\"\n  list={activityList}\n  />\n      )}\n  </div>\n  </div>\n      )};\n  </>\n);\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}