{"ast":null,"code":"import React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Card, CurrentUser, AllActivity } from \"./context\";\nimport { updateBalance } from \"../../../dal\";\nexport default function Login() {\n  const {\n    currentUser,\n    setCurrentUser\n  } = React.useContext(CurrentUser);\n  const navigate = useNavigate();\n  const [status, setStatus] = React.useState('');\n  const [email, setEmail] = React.useState('');\n  const [password, setPassword] = React.useState('');\n  const [formFilled, setFormFilled] = React.useState(true);\n  function validate(field, label) {\n    if (!field) {\n      setStatus('Error: ' + label);\n      setTimeout(() => setStatus(''), 3000);\n      return false;\n    }\n    return true;\n  }\n  const url = \"/account/login/\".concat(email, \"/\").concat(password);\n  async function getBalance() {\n    var res = await fetch(url);\n    var data = await res.json();\n    setCurrentUser(user => ({\n      ...user,\n      balance: data.balance,\n      name: data.name\n    }));\n  }\n  async function logIn() {\n    if (!validate(email, 'Invalid Email')) return;\n    if (!validate(password, 'Invalid Password')) return;\n    let success = false;\n    var res = await fetch(url);\n    const contentType = res.headers.get(\"content-type\");\n    if (!contentType || !contentType.includes(\"application/json\")) {\n      alert('Error: No account found for that email. Please try again, or create a new account.');\n      return;\n    }\n    var data = await res.json();\n    if (password === data.password) {\n      success = true;\n      setCurrentUser(user => ({\n        email: email,\n        name: data.name,\n        balance: data.balance\n      }));\n      setTimeout(() => {\n        navigate('/');\n      }, 0);\n    }\n\n    //       let date = new Date();\n    //   allActivity.push({key:allActivity.length, userID:user.key, name:user.name, activity: `${user.name} logged in`, balance:user.balance, time:date})\n\n    if (!success) {\n      alert('Error: Your password was incorrect. Please try again.');\n    }\n  }\n  function logOut() {\n    setCurrentUser(user => ({\n      email: '',\n      name: '',\n      balance: 0\n    }));\n    setTimeout(() => {\n      navigate('/login');\n    }, 0);\n  }\n  React.useEffect(() => {\n    setFormFilled(email != '' && password != '');\n  }, [email, password]);\n  return /*#__PURE__*/React.createElement(Card, {\n    bgcolor: \"info\",\n    header: !currentUser.name ? \"Log In\" : \"Logged In\",\n    status: status,\n    body: !currentUser.name ? /*#__PURE__*/React.createElement(React.Fragment, null, \"Email Address\", /*#__PURE__*/React.createElement(\"br\", null), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"input\",\n      className: \"form-control\",\n      id: \"email\",\n      placeholder: \"Enter Email Address\",\n      value: email,\n      onChange: e => setEmail(e.currentTarget.value)\n    }), \" \", /*#__PURE__*/React.createElement(\"br\", null), \"Password\", /*#__PURE__*/React.createElement(\"br\", null), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      className: \"form-control\",\n      id: \"password\",\n      placeholder: \"Enter Password\",\n      value: password,\n      onChange: e => setPassword(e.currentTarget.value)\n    }), \" \", /*#__PURE__*/React.createElement(\"br\", null), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-light\",\n      onClick: logIn,\n      disabled: !formFilled\n    }, \"Log In\"), \" \", /*#__PURE__*/React.createElement(\"br\", null)) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h5\", null, \"Success!\"), /*#__PURE__*/React.createElement(\"p\", null, \"You are logged in as \", currentUser.name, \".\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-light\",\n      onClick: logOut\n    }, \"Log Out\"), \" \", /*#__PURE__*/React.createElement(\"br\", null))\n  });\n}","map":{"version":3,"names":["React","useNavigate","Card","CurrentUser","AllActivity","updateBalance","Login","currentUser","setCurrentUser","useContext","navigate","status","setStatus","useState","email","setEmail","password","setPassword","formFilled","setFormFilled","validate","field","label","setTimeout","url","concat","getBalance","res","fetch","data","json","user","balance","name","logIn","success","contentType","headers","get","includes","alert","logOut","useEffect","createElement","bgcolor","header","body","Fragment","type","className","id","placeholder","value","onChange","e","currentTarget","onClick","disabled"],"sources":["/Users/Regan/Documents/GitHub/BadBank/public/src/Components/login.js"],"sourcesContent":["import React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Card, CurrentUser, AllActivity } from \"./context\";\nimport { updateBalance } from \"../../../dal\";\n\n\nexport default function Login(){\n    const { currentUser, setCurrentUser} = React.useContext(CurrentUser);\n    const navigate = useNavigate();\n    const [status, setStatus] = React.useState('');\n    const [email, setEmail] = React.useState('');\n    const [password, setPassword] = React.useState('');\n    const [formFilled, setFormFilled] = React.useState(true);\n\n\n    function validate(field, label){\n        if (!field) {\n            setStatus('Error: ' + label);\n            setTimeout(() => setStatus(''), 3000); \n            return false;\n        }\n        return true;\n    }\n    \n    const url = `/account/login/${email}/${password}`;\n\n    async function getBalance() {\n        var res = await fetch(url);\n        var data = await res.json();\n      setCurrentUser(user => ({\n        ...user,\n        balance: data.balance,\n        name: data.name\n      }));     \n    }\n    \n    async function logIn(){\n        if(!validate(email, 'Invalid Email')) return;\n        if(!validate(password, 'Invalid Password')) return;\n        let success = false;\n\n\n\n        var res = await fetch(url);\n\n        const contentType = res.headers.get(\"content-type\");\n        if (!contentType || !contentType.includes(\"application/json\")) {\n             alert('Error: No account found for that email. Please try again, or create a new account.');\n             return;  \n         }\n\n         var data = await res.json();\n\n         if (password === data.password) {\n             success = true;\n             setCurrentUser(user => ({\n                 email: email,\n                 name: data.name,\n                 balance: data.balance\n               }));  \n \n               setTimeout(() => {\n                 navigate('/');\n             }, 0);\n         }\n\n     //       let date = new Date();\n     //   allActivity.push({key:allActivity.length, userID:user.key, name:user.name, activity: `${user.name} logged in`, balance:user.balance, time:date})\n\n        if (!success) {\n            alert('Error: Your password was incorrect. Please try again.');\n        }\n    }\n\n    function logOut(){\n        setCurrentUser(user => ({\n            email: '',\n            name: '',\n            balance: 0\n          }));  \n          setTimeout(() => {\n            navigate('/login');\n        }, 0);\n    }\n\n    React.useEffect(() =>{\n        setFormFilled(email != '' && password != ''); \n    }, [email, password])\n\n    return (\n        <Card \n        bgcolor=\"info\"\n        header={(!currentUser.name) ? \"Log In\" :\"Logged In\"}\n        status={status}\n        body={(!currentUser.name) ? (\n            <>\n            Email Address<br/>\n            <input type=\"input\" className=\"form-control\" id=\"email\" placeholder=\"Enter Email Address\" value={email} onChange={e => setEmail(e.currentTarget.value)} /> <br />\n            Password<br/>\n            <input type=\"password\" className=\"form-control\" id=\"password\" placeholder=\"Enter Password\" value={password} onChange={e => setPassword(e.currentTarget.value)} /> <br />\n            <button type=\"submit\" className=\"btn btn-light\" onClick={logIn} disabled={!formFilled}>Log In</button> <br />\n        </>\n        ) : (\n            <>\n            <h5>Success!</h5>\n            <p>You are logged in as {currentUser.name}.</p>\n            <button type=\"submit\" className=\"btn btn-light\" onClick={logOut}>Log Out</button> <br />\n\n            </>\n        )}\n        />\n    );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}