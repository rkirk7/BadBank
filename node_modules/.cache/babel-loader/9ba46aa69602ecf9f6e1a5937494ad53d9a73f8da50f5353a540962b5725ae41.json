{"ast":null,"code":"import React from \"react\";\nimport { Card, CurrentUser, UserContext, AllActivity } from \"./context\";\nexport default function Deposit() {\n  const currentUser = React.useContext(CurrentUser);\n  const ctx = React.useContext(UserContext);\n  const allActivity = React.useContext(AllActivity);\n  const [deposit, setDeposit] = React.useState(0);\n  const [balance, setBalance] = React.useState(currentUser.balance);\n  const [formFilled, setFormFilled] = React.useState(true);\n  const [depositComplete, setDepositComplete] = React.useState(false);\n  function makeDeposit() {\n    if (isNaN(Number(deposit))) {\n      alert('Your deposit must be a valid number.');\n      return;\n    }\n    if (Number(deposit) <= 0) {\n      alert('Your deposit cannot be a negative number.');\n      return;\n    }\n    let newBalance = Number(deposit) + Number(balance);\n    setBalance(newBalance);\n    currentUser.balance = newBalance;\n    ctx.forEach(user => {\n      if (user.email === currentUser.email) {\n        user.balance = newBalance;\n      }\n      ;\n    });\n    setDepositComplete(true);\n    let date = new Date();\n    allActivity.push({\n      key: allActivity.length,\n      userID: currentUser.key,\n      name: currentUser.name,\n      activity: \"\".concat(currentUser.name, \" deposited $\").concat(deposit),\n      balance: newBalance,\n      time: date\n    });\n  }\n  React.useEffect(() => {\n    setFormFilled(deposit != '0' && deposit != '');\n  }, [deposit]);\n  return /*#__PURE__*/React.createElement(Card, {\n    bgcolor: \"primary\",\n    txtcolor: \"white\",\n    header: \"Make a Deposit\",\n    text: currentUser.name != '' ? \"\".concat(currentUser.name, \", your balance is $\").concat(balance, \".\") : \"Please log in or create an account to make a deposit.\",\n    title: depositComplete && \"You have successfully deposited $\".concat(deposit, \"!\"),\n    centered: currentUser.name != '' ? /*#__PURE__*/React.createElement(React.Fragment, null, \"Deposit Amount\", /*#__PURE__*/React.createElement(\"br\", null), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"input\",\n      className: \"form-control\",\n      id: \"deposit\",\n      placeholder: \"Enter Deposit Amount\",\n      value: deposit,\n      onChange: e => setDeposit(e.currentTarget.value)\n    }), \" \", /*#__PURE__*/React.createElement(\"br\", null), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-light\",\n      onClick: makeDeposit,\n      disabled: !formFilled\n    }, \"Make Deposit\"), \" \", /*#__PURE__*/React.createElement(\"br\", null)) : /*#__PURE__*/React.createElement(React.Fragment, null)\n  });\n}","map":{"version":3,"names":["React","Card","CurrentUser","UserContext","AllActivity","Deposit","currentUser","useContext","ctx","allActivity","deposit","setDeposit","useState","balance","setBalance","formFilled","setFormFilled","depositComplete","setDepositComplete","makeDeposit","isNaN","Number","alert","newBalance","forEach","user","email","date","Date","push","key","length","userID","name","activity","concat","time","useEffect","createElement","bgcolor","txtcolor","header","text","title","centered","Fragment","type","className","id","placeholder","value","onChange","e","currentTarget","onClick","disabled"],"sources":["/Users/Regan/Documents/GitHub/BadBank/public/src/Components/deposit.js"],"sourcesContent":["import React from \"react\";\nimport { Card, CurrentUser, UserContext, AllActivity } from \"./context\";\n\n\nexport default function Deposit(){\n    const currentUser = React.useContext(CurrentUser);\n    const ctx = React.useContext(UserContext);\n    const allActivity = React.useContext(AllActivity);\n\n\n    const [deposit, setDeposit] = React.useState(0);\n    const [balance, setBalance] = React.useState(currentUser.balance);\n    const [formFilled, setFormFilled] = React.useState(true);\n    const [depositComplete, setDepositComplete] = React.useState(false);\n\n\n    function makeDeposit() {\n        if (isNaN(Number(deposit))) {\n            alert('Your deposit must be a valid number.'); \n            return;\n        }\n        if ((Number(deposit)) <= 0) {\n            alert('Your deposit cannot be a negative number.'); \n            return;\n        }\n        let newBalance = Number(deposit) + Number(balance)\n        setBalance(newBalance);\n        currentUser.balance = newBalance;\n        ctx.forEach(user => {\n            if (user.email === currentUser.email) { \n                user.balance = newBalance \n            };\n        });\n        setDepositComplete(true);\n        let date = new Date();\n        allActivity.push({key:allActivity.length, userID:currentUser.key, name:currentUser.name, activity: `${currentUser.name} deposited $${deposit}`, balance:newBalance, time:date})\n    }\n    \n\n    React.useEffect(() =>{\n        setFormFilled(deposit != '0' && deposit != ''); \n    }, [deposit])\n\n\n    return (\n        <Card \n        bgcolor=\"primary\"\n        txtcolor=\"white\"\n        header=\"Make a Deposit\"\n        text={currentUser.name != '' ? `${currentUser.name}, your balance is $${balance}.` : \"Please log in or create an account to make a deposit.\"}       \n        title={depositComplete && `You have successfully deposited $${deposit}!`}       \n        centered={currentUser.name != '' ? (\n            <>\n            Deposit Amount<br/>\n            <input type=\"input\" className=\"form-control\" id=\"deposit\" placeholder=\"Enter Deposit Amount\" value={deposit} onChange={e => setDeposit(e.currentTarget.value)} /> <br />\n            <button type=\"submit\" className=\"btn btn-light\" onClick={makeDeposit} disabled={!formFilled}>Make Deposit</button> <br />\n        </>\n        ) : (\n            <>\n            </>\n        )}\n        />\n     );\n }"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}