{"ast":null,"code":"import React, { useEffect } from \"react\";\nimport { Card, CurrentUser } from \"./context\";\nimport { checkAuthentication, getBalance } from \"./loading\";\nimport { useNavigate } from \"react-router-dom\";\nexport default function Transfer() {\n  const {\n    currentUser,\n    setCurrentUser\n  } = React.useContext(CurrentUser);\n  const [transferAmount, setTransferAmount] = React.useState(0);\n  const [lastTransfer, setLastTransfer] = React.useState(0);\n  const [toEmail, setToEmail] = React.useState('');\n  const [formFilled, setFormFilled] = React.useState(true);\n  const [transferComplete, setTransferComplete] = React.useState(false);\n  const [loading, setLoading] = React.useState(true);\n  const navigate = useNavigate();\n  useEffect(() => {\n    async function loadPage() {\n      if (currentUser.email === '' || !currentUser) {\n        await checkAuthentication(setCurrentUser, navigate);\n      } else {\n        await getBalance(setCurrentUser, currentUser.email);\n      }\n      setLoading(false);\n    }\n    loadPage();\n  }, []);\n  async function makeTransfer() {\n    console.log('trying to transfer');\n    try {\n      if (isNaN(Number(transferAmount))) {\n        alert('Your transfer must be a valid number.');\n        return;\n      }\n      if (Number(transferAmount) <= 0) {\n        alert('Your transfer cannot be a negative number.');\n        return;\n      }\n      if (Number(transferAmount) > Number(currentUser.balance)) {\n        alert('Your balance is too low. Please enter a lower amount.');\n        return;\n      }\n      if (!Number.isInteger(Number(transferAmount))) {\n        alert('Error: You must transfer dollars only, not cents. Please round up or down and try again.');\n        return;\n      }\n      if (toEmail === currentUser.email) {\n        alert(\"You cannot transfer money to yourself. Please enter a valid recipient.\");\n        return;\n      }\n      if (!toEmail.match(/^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/)) {\n        alert('You must enter a valid email address for the recipient. Please try again.');\n        return;\n      }\n      let receiveUserBalanceURL = \"/account/balance/\".concat(toEmail);\n      const res2 = await fetch(receiveUserBalanceURL);\n      const data2 = await res2.json();\n      console.log(data2);\n      if (!data2) {\n        alert(\"Error: Could not find recipient's account. Please check their email and try again.\");\n        return;\n      }\n      let newFromBalance = parseInt(currentUser.balance) - parseInt(transferAmount);\n      let newToBalance = parseInt(data2.balance) + parseInt(transferAmount);\n      const url = \"/account/transfer/\".concat(currentUser.email, \"/\").concat(toEmail, \"/\").concat(transferAmount, \"/\").concat(newFromBalance, \"/\").concat(newToBalance);\n      await fetch(url);\n      setCurrentUser(user => ({\n        ...user,\n        balance: newFromBalance\n      }));\n      setLastTransfer(transferAmount);\n      setTransferAmount(0);\n      setToEmail('');\n      setTransferComplete(true);\n    } catch (error) {\n      console.error('Transfer failed:', error);\n      alert('Failed to make transfer. Please try again.');\n    }\n  }\n  React.useEffect(() => {\n    setFormFilled(transferAmount != '0' && transferAmount != '' && toEmail != null && toEmail != '');\n  }, [transferAmount, toEmail]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, !loading && /*#__PURE__*/React.createElement(\"form\", null, /*#__PURE__*/React.createElement(Card, {\n    bgcolor: \"primary\",\n    txtcolor: \"white\",\n    header: \"Make a Transfer\",\n    text: \"\".concat(currentUser.name, \", your balance is $\").concat(currentUser.balance, \".\"),\n    title: transferComplete && \"You have successfully transferred $\".concat(lastTransfer, \"!\"),\n    body: /*#__PURE__*/React.createElement(React.Fragment, null, \"Transfer Amount\", /*#__PURE__*/React.createElement(\"br\", null), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"input\",\n      className: \"form-control\",\n      id: \"transfer\",\n      placeholder: \"Enter Transfer Amount\",\n      value: transferAmount,\n      onChange: e => {\n        setTransferAmount(e.currentTarget.value);\n        setTransferComplete(false);\n      }\n    }), \" \", /*#__PURE__*/React.createElement(\"br\", null), \"Transfer To\", /*#__PURE__*/React.createElement(\"br\", null), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"input\",\n      className: \"form-control\",\n      id: \"recipient\",\n      placeholder: \"Enter Email\",\n      value: toEmail,\n      onChange: e => {\n        setToEmail(e.currentTarget.value);\n        setTransferComplete(false);\n      }\n    }), \" \", /*#__PURE__*/React.createElement(\"br\", null)),\n    centered: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-light\",\n      onClick: makeTransfer,\n      disabled: !formFilled\n    }, \"Make Transfer\"), \" \", /*#__PURE__*/React.createElement(\"br\", null))\n  })), \" \");\n}","map":{"version":3,"names":["React","useEffect","Card","CurrentUser","checkAuthentication","getBalance","useNavigate","Transfer","currentUser","setCurrentUser","useContext","transferAmount","setTransferAmount","useState","lastTransfer","setLastTransfer","toEmail","setToEmail","formFilled","setFormFilled","transferComplete","setTransferComplete","loading","setLoading","navigate","loadPage","email","makeTransfer","console","log","isNaN","Number","alert","balance","isInteger","match","receiveUserBalanceURL","concat","res2","fetch","data2","json","newFromBalance","parseInt","newToBalance","url","user","error","createElement","Fragment","bgcolor","txtcolor","header","text","name","title","body","type","className","id","placeholder","value","onChange","e","currentTarget","centered","onClick","disabled"],"sources":["/Users/Regan/Documents/GitHub/BadBank/public/src/Components/transfer.js"],"sourcesContent":["import React, {useEffect} from \"react\";\nimport { Card, CurrentUser } from \"./context\";\nimport {checkAuthentication, getBalance} from \"./loading\"\nimport { useNavigate } from \"react-router-dom\";\n\nexport default function Transfer(){\n    const { currentUser, setCurrentUser } = React.useContext(CurrentUser);\n    const [transferAmount, setTransferAmount] = React.useState(0);\n    const [lastTransfer, setLastTransfer] = React.useState(0);\n    const [toEmail, setToEmail] = React.useState('');\n    const [formFilled, setFormFilled] = React.useState(true);\n    const [transferComplete, setTransferComplete] = React.useState(false);\n    const [loading, setLoading] = React.useState(true);\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        async function loadPage() {\n            if (currentUser.email === '' || !currentUser) {\n                await checkAuthentication(setCurrentUser, navigate);\n            } \n            else {\n                await getBalance(setCurrentUser, currentUser.email);\n            }\n            setLoading(false);\n        }\n        loadPage();\n    }, []);\n\n    async function makeTransfer() {\n        console.log('trying to transfer');\n        try {\n            if (isNaN(Number(transferAmount))) {\n                alert('Your transfer must be a valid number.'); \n                return;\n            }\n            if ((Number(transferAmount)) <= 0) {\n                alert('Your transfer cannot be a negative number.'); \n                return;\n            }\n            if (Number(transferAmount) > Number(currentUser.balance)) {\n                alert('Your balance is too low. Please enter a lower amount.'); \n                return;\n            }\n            if (!Number.isInteger(Number(transferAmount))) {\n                alert('Error: You must transfer dollars only, not cents. Please round up or down and try again.'); \n                return;\n            }\n            if (toEmail === currentUser.email){\n                alert(\"You cannot transfer money to yourself. Please enter a valid recipient.\")\n                return;\n            }\n            if (!toEmail.match(/^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/)) {\n                alert('You must enter a valid email address for the recipient. Please try again.'); \n                return;\n            }\n    \n            let receiveUserBalanceURL = `/account/balance/${toEmail}`;\n    \n            const res2 = await fetch(receiveUserBalanceURL);\n            const data2 = await res2.json();\n            console.log(data2);\n    \n            if (!data2) {\n                alert(\"Error: Could not find recipient's account. Please check their email and try again.\")\n                return;\n            }\n    \n            let newFromBalance = parseInt(currentUser.balance) - parseInt(transferAmount);\n            let newToBalance = parseInt(data2.balance) + parseInt(transferAmount);\n    \n            const url = `/account/transfer/${currentUser.email}/${toEmail}/${transferAmount}/${newFromBalance}/${newToBalance}`;\n            await fetch(url);\n    \n            setCurrentUser(user => ({\n                ...user,\n                balance: newFromBalance\n            }));\n    \n            setLastTransfer(transferAmount);\n            setTransferAmount(0);\n            setToEmail('');\n            setTransferComplete(true);\n    \n        } catch (error) {\n            console.error('Transfer failed:', error);\n            alert('Failed to make transfer. Please try again.');\n        }\n    }\n    \n    \n    React.useEffect(() =>{\n        setFormFilled(transferAmount != '0' && transferAmount != '' && toEmail != null && toEmail != ''); \n    }, [transferAmount, toEmail])\n\n    return (\n        <>\n        {!loading && (\n            <form>\n        <Card \n        bgcolor=\"primary\"\n        txtcolor=\"white\"\n        header=\"Make a Transfer\"\n        text={`${currentUser.name}, your balance is $${currentUser.balance}.`}       \n        title={transferComplete && `You have successfully transferred $${lastTransfer}!`}       \n        body={\n            <>\n            Transfer Amount<br/>\n            <input type=\"input\" className=\"form-control\" id=\"transfer\" placeholder=\"Enter Transfer Amount\" value={transferAmount} onChange={e => {\n                setTransferAmount(e.currentTarget.value);\n                setTransferComplete(false);\n                }} /> <br /> \n            Transfer To<br/>\n            <input type=\"input\" className=\"form-control\" id=\"recipient\" placeholder=\"Enter Email\" value={toEmail} onChange={e => {\n                setToEmail(e.currentTarget.value);\n                setTransferComplete(false);\n                }} /> <br />     \n        </>\n        }\n        centered={\n    <>\n            <button type=\"submit\" className=\"btn btn-light\" onClick={makeTransfer} disabled={!formFilled}>Make Transfer</button> <br />\n    </>\n        }\n        />\n        </form>\n        )} </>\n     );\n }"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}