{"ast":null,"code":"import React from \"react\";\nimport { Card, CurrentUser, AllActivity } from \"./context\";\nexport default function Withdraw() {\n  const currentUser = React.useContext(CurrentUser);\n  const allActivity = React.useContext(AllActivity);\n  const [withdrawal, setWithdrawal] = React.useState(0);\n  const [balance, setBalance] = React.useState(currentUser.balance);\n  const [formFilled, setFormFilled] = React.useState(true);\n  const [withdrawalComplete, setWtihdrawalComplete] = React.useState(false);\n  const url = \"/account/balance/\".concat(currentUser.email);\n  React.useEffect(() => {\n    getBalance();\n  }, []);\n  async function getBalance() {\n    var res = await fetch(url);\n    var data = await res.json();\n    setBalance(data.balance);\n  }\n  function makeWithdrawal() {\n    if (isNaN(Number(withdrawal))) {\n      alert('Your withdrawal must be a valid number.');\n      return;\n    }\n    if (Number(withdrawal) <= 0) {\n      alert('Please enter your withdrawal amount as a positive number.');\n      return;\n    }\n    if (Number(withdrawal) > Number(balance)) {\n      alert('Your balance is too low. Please enter a lower withdrawal amount.');\n      return;\n    } else {\n      let newBalance = Number(balance) - Number(withdrawal);\n      setBalance(newBalance);\n      currentUser.balance = newBalance;\n      const url = \"/account/updateBalance/\".concat(currentUser.email, \"/\").concat(newBalance);\n      (async () => {\n        console.log('trying to update balance');\n        var res = await fetch(url);\n        setBalance(newBalance);\n        currentUser.balance = newBalance;\n        setWtihdrawalComplete(true);\n      })();\n\n      //     let date = new Date();\n      //      allActivity.push({key:allActivity.length, userID:currentUser.key, name:currentUser.name, activity: `${currentUser.name} withdrew $${withdrawal}`, balance:newBalance, time:date})\n    }\n  }\n  React.useEffect(() => {\n    setFormFilled(withdrawal != '0' && withdrawal != '');\n  }, [withdrawal]);\n  return /*#__PURE__*/React.createElement(Card, {\n    bgcolor: \"primary\",\n    txtcolor: \"white\",\n    header: \"Make a Withdrawal\",\n    text: currentUser.name != '' ? \"\".concat(currentUser.name, \", your balance is $\").concat(balance, \".\") : \"Please log in to make a withdrawal.\",\n    title: withdrawalComplete && \"You have successfully withdrawn $\".concat(withdrawal, \"!\"),\n    body: currentUser.name != '' ? /*#__PURE__*/React.createElement(React.Fragment, null, \"Withdrawal Amount\", /*#__PURE__*/React.createElement(\"br\", null), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"input\",\n      className: \"form-control\",\n      id: \"withdrawal\",\n      placeholder: \"Enter Withdrawal Amount\",\n      value: withdrawal,\n      onChange: e => {\n        setWithdrawal(e.currentTarget.value);\n        setWtihdrawalComplete(false);\n      }\n    }), \" \", /*#__PURE__*/React.createElement(\"br\", null), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-light\",\n      onClick: makeWithdrawal,\n      disabled: !formFilled\n    }, \"Make Withdrawal\"), \" \", /*#__PURE__*/React.createElement(\"br\", null)) : /*#__PURE__*/React.createElement(React.Fragment, null)\n  });\n}","map":{"version":3,"names":["React","Card","CurrentUser","AllActivity","Withdraw","currentUser","useContext","allActivity","withdrawal","setWithdrawal","useState","balance","setBalance","formFilled","setFormFilled","withdrawalComplete","setWtihdrawalComplete","url","concat","email","useEffect","getBalance","res","fetch","data","json","makeWithdrawal","isNaN","Number","alert","newBalance","console","log","createElement","bgcolor","txtcolor","header","text","name","title","body","Fragment","type","className","id","placeholder","value","onChange","e","currentTarget","onClick","disabled"],"sources":["/Users/Regan/Documents/GitHub/BadBank/public/src/Components/withdraw.js"],"sourcesContent":["import React from \"react\";\nimport { Card, CurrentUser, AllActivity } from \"./context\";\n\nexport default function Withdraw(){\n    const currentUser = React.useContext(CurrentUser);\n    const allActivity = React.useContext(AllActivity);\n\n    const [withdrawal, setWithdrawal] = React.useState(0);\n    const [balance, setBalance] = React.useState(currentUser.balance);\n    const [formFilled, setFormFilled] = React.useState(true);\n    const [withdrawalComplete, setWtihdrawalComplete] = React.useState(false);\n\n    const url = `/account/balance/${currentUser.email}`;\n    React.useEffect(() => {\n        getBalance();\n      }, []);\n    \n      async function getBalance() {\n        var res = await fetch(url);\n        var data = await res.json();\n        setBalance(data.balance);\n     }\n\n\n\n    function makeWithdrawal() {\n        if (isNaN(Number(withdrawal))) {\n            alert('Your withdrawal must be a valid number.'); \n            return;\n        }\n        if ((Number(withdrawal)) <= 0) {\n            alert('Please enter your withdrawal amount as a positive number.'); \n            return;\n        }\n        if (Number(withdrawal) > Number(balance)) {\n            alert('Your balance is too low. Please enter a lower withdrawal amount.'); \n            return;\n        }\n\n        else {\n        let newBalance = Number(balance) - Number(withdrawal)\n        setBalance(newBalance);\n        currentUser.balance = newBalance;\n        const url = `/account/updateBalance/${currentUser.email}/${newBalance}`;\n        (async () => {\n        console.log('trying to update balance');\n       var res = await fetch(url);\n       setBalance(newBalance);\n        currentUser.balance = newBalance;\n        setWtihdrawalComplete(true);\n        })();\n\n\n   //     let date = new Date();\n  //      allActivity.push({key:allActivity.length, userID:currentUser.key, name:currentUser.name, activity: `${currentUser.name} withdrew $${withdrawal}`, balance:newBalance, time:date})\n        } \n    }\n\n    React.useEffect(() =>{\n        setFormFilled(withdrawal != '0' && withdrawal != ''); \n    }, [withdrawal])\n    \n    return (\n        <Card \n        bgcolor=\"primary\"\n        txtcolor=\"white\"\n        header=\"Make a Withdrawal\"\n        text={currentUser.name != '' ? `${currentUser.name}, your balance is $${balance}.` : \"Please log in to make a withdrawal.\"}       \n        title={withdrawalComplete && `You have successfully withdrawn $${withdrawal}!`}       \n        body={currentUser.name != '' ? (\n            <>\n            Withdrawal Amount<br/>\n            <input type=\"input\" className=\"form-control\" id=\"withdrawal\" placeholder=\"Enter Withdrawal Amount\" value={withdrawal} onChange={e => {\n                setWithdrawal(e.currentTarget.value);\n                setWtihdrawalComplete(false);\n                }} /> <br />\n            <button type=\"submit\" className=\"btn btn-light\" onClick={makeWithdrawal} disabled={!formFilled}>Make Withdrawal</button> <br />\n        </>\n        ) : (\n            <>\n\n            </>\n        )}\n        />\n     );\n }"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}