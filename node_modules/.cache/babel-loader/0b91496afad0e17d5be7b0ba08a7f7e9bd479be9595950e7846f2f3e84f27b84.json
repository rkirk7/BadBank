{"ast":null,"code":"export async function checkAuthentication(setCurrentUser, navigate) {\n  const authorizationURL = \"/authorization/\";\n  try {\n    const res = await fetch(authorizationURL);\n    if (res.ok) {\n      let user = await res.json();\n      if (!user.email) {\n        setCurrentUser({\n          name: '',\n          email: '',\n          balance: 0,\n          password: '',\n          role: 'none'\n        });\n        navigate('/');\n      } else {\n        setCurrentUser(user);\n        return null;\n      }\n    } else {\n      setCurrentUser({\n        name: '',\n        email: '',\n        balance: 0,\n        password: '',\n        role: 'none'\n      });\n      navigate('/');\n    }\n  } catch (error) {\n    console.error('Authorization review failed:', error);\n    setCurrentUser({\n      name: '',\n      email: '',\n      balance: 0,\n      password: '',\n      role: 'none'\n    });\n    navigate('/');\n  }\n}\nexport async function getBalance(setCurrentUser, email) {\n  console.log('getting balance');\n  try {\n    const url = \"/account/balance/\".concat(email);\n    const res = await fetch(url);\n    const data = await res.json();\n    setCurrentUser(user => ({\n      ...user,\n      balance: parseInt(data.balance, 10)\n    }));\n  } catch (error) {\n    console.error('Failed to fetch balance:', error);\n  }\n}","map":{"version":3,"names":["checkAuthentication","setCurrentUser","navigate","authorizationURL","res","fetch","ok","user","json","email","name","balance","password","role","error","console","getBalance","log","url","concat","data","parseInt"],"sources":["/Users/Regan/Documents/GitHub/BadBank/public/src/Components/loading.js"],"sourcesContent":["export async function checkAuthentication(setCurrentUser, navigate) {\n    const authorizationURL = `/authorization/`;\n    try {\n        const res = await fetch(authorizationURL);\n        if (res.ok) {\n            let user = await res.json();\n            if (!user.email) {\n                setCurrentUser({\n                    name: '',\n                    email: '',\n                    balance: 0,\n                    password: '',\n                    role: 'none'\n                });\n                navigate('/');\n            } else {\n                setCurrentUser(user);\n                return null;\n            }\n        } else {\n            setCurrentUser({\n                name: '',\n                email: '',\n                balance: 0,\n                password: '',\n                role: 'none'\n            });\n            navigate('/');\n        }\n    } catch (error) {\n        console.error('Authorization review failed:', error);\n        setCurrentUser({\n            name: '',\n            email: '',\n            balance: 0,\n            password: '',\n            role: 'none'\n        });\n        navigate('/');\n    }\n}\n\nexport async function getBalance(setCurrentUser, email) {\n    console.log('getting balance');\n    try {\n        const url = `/account/balance/${email}`;\n        const res = await fetch(url);\n        const data = await res.json();\n        setCurrentUser(user => ({\n            ...user,\n            balance: parseInt(data.balance, 10)\n        }));\n    } catch (error) {\n        console.error('Failed to fetch balance:', error);\n    }\n}"],"mappings":"AAAA,OAAO,eAAeA,mBAAmBA,CAACC,cAAc,EAAEC,QAAQ,EAAE;EAChE,MAAMC,gBAAgB,oBAAoB;EAC1C,IAAI;IACA,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAACF,gBAAgB,CAAC;IACzC,IAAIC,GAAG,CAACE,EAAE,EAAE;MACR,IAAIC,IAAI,GAAG,MAAMH,GAAG,CAACI,IAAI,CAAC,CAAC;MAC3B,IAAI,CAACD,IAAI,CAACE,KAAK,EAAE;QACbR,cAAc,CAAC;UACXS,IAAI,EAAE,EAAE;UACRD,KAAK,EAAE,EAAE;UACTE,OAAO,EAAE,CAAC;UACVC,QAAQ,EAAE,EAAE;UACZC,IAAI,EAAE;QACV,CAAC,CAAC;QACFX,QAAQ,CAAC,GAAG,CAAC;MACjB,CAAC,MAAM;QACHD,cAAc,CAACM,IAAI,CAAC;QACpB,OAAO,IAAI;MACf;IACJ,CAAC,MAAM;MACHN,cAAc,CAAC;QACXS,IAAI,EAAE,EAAE;QACRD,KAAK,EAAE,EAAE;QACTE,OAAO,EAAE,CAAC;QACVC,QAAQ,EAAE,EAAE;QACZC,IAAI,EAAE;MACV,CAAC,CAAC;MACFX,QAAQ,CAAC,GAAG,CAAC;IACjB;EACJ,CAAC,CAAC,OAAOY,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACpDb,cAAc,CAAC;MACXS,IAAI,EAAE,EAAE;MACRD,KAAK,EAAE,EAAE;MACTE,OAAO,EAAE,CAAC;MACVC,QAAQ,EAAE,EAAE;MACZC,IAAI,EAAE;IACV,CAAC,CAAC;IACFX,QAAQ,CAAC,GAAG,CAAC;EACjB;AACJ;AAEA,OAAO,eAAec,UAAUA,CAACf,cAAc,EAAEQ,KAAK,EAAE;EACpDM,OAAO,CAACE,GAAG,CAAC,iBAAiB,CAAC;EAC9B,IAAI;IACA,MAAMC,GAAG,uBAAAC,MAAA,CAAuBV,KAAK,CAAE;IACvC,MAAML,GAAG,GAAG,MAAMC,KAAK,CAACa,GAAG,CAAC;IAC5B,MAAME,IAAI,GAAG,MAAMhB,GAAG,CAACI,IAAI,CAAC,CAAC;IAC7BP,cAAc,CAACM,IAAI,KAAK;MACpB,GAAGA,IAAI;MACPI,OAAO,EAAEU,QAAQ,CAACD,IAAI,CAACT,OAAO,EAAE,EAAE;IACtC,CAAC,CAAC,CAAC;EACP,CAAC,CAAC,OAAOG,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;EACpD;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}