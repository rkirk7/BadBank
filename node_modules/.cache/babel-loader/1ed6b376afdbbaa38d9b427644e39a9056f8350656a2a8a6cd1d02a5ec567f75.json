{"ast":null,"code":"import React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Card, CurrentUser, AllActivity } from \"./context\";\nimport { initializeApp } from \"firebase/app\";\nimport { getAuth, signInWithEmailAndPassword, onAuthStateChanged } from 'firebase/auth';\nimport { updateBalance } from \"../../../dal\";\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDhKNCusOPW2y52bMwLnOrXIy-u1y1Q4KI\",\n  authDomain: \"bank-f0c47.firebaseapp.com\",\n  projectId: \"bank-f0c47\",\n  storageBucket: \"bank-f0c47.appspot.com\",\n  messagingSenderId: \"710670974978\",\n  appId: \"1:710670974978:web:b724e76530555264b8271b\"\n};\nconst app = initializeApp(firebaseConfig);\nconst auth = getAuth(app);\nexport default function Login() {\n  const {\n    currentUser,\n    setCurrentUser\n  } = React.useContext(CurrentUser);\n  //const currentUser = React.useContext(CurrentUser);\n  const navigate = useNavigate();\n\n  //  const allActivity = React.useContext(AllActivity);\n  const [status, setStatus] = React.useState('');\n  const [email, setEmail] = React.useState('');\n  const [password, setPassword] = React.useState('');\n  const [formFilled, setFormFilled] = React.useState(true);\n  function validate(field, label) {\n    if (!field) {\n      setStatus('Error: ' + label);\n      setTimeout(() => setStatus(''), 3000);\n      return false;\n    }\n    return true;\n  }\n  const url = \"/account/login/\".concat(email, \"/\").concat(password);\n  async function getBalance() {\n    var res = await fetch(url);\n    var data = await res.json();\n    setCurrentUser(user => ({\n      ...user,\n      balance: data.balance,\n      name: data.name\n    }));\n  }\n  async function logIn() {\n    if (!validate(email, 'Invalid Email')) return;\n    if (!validate(password, 'Invalid Password')) return;\n    let success = false;\n    const promise = auth.signInWithEmailAndPassword(email, password);\n    promise.then(resp => {\n      setCurrentUser(user => ({\n        email: email,\n        name: '',\n        balance: 0\n      }));\n      updateBalance();\n      success = true;\n    });\n    promise.catch(e => alert('Error:', e.message));\n\n    // var res = await fetch(url);\n\n    // const contentType = res.headers.get(\"content-type\");\n    // if (!contentType || !contentType.includes(\"application/json\")) {\n    //     alert('Error: No account found for that email. Please try again, or create a new account.');\n    //     return;  \n    // }\n\n    // var data = await res.json();\n\n    // if (password === data.password) {\n    //     success = true;\n    //     setCurrentUser(user => ({\n    //         email: email,\n    //         name: data.name,\n    //         balance: data.balance\n    //       }));  \n\n    //       setTimeout(() => {\n    //         navigate('/');\n    //     }, 0);\n    // }\n\n    //       let date = new Date();\n    //   allActivity.push({key:allActivity.length, userID:user.key, name:user.name, activity: `${user.name} logged in`, balance:user.balance, time:date})\n\n    if (!success) {\n      alert('Error: Your password was incorrect. Please try again.');\n    }\n  }\n  function logOut() {\n    setCurrentUser(user => ({\n      email: '',\n      name: '',\n      balance: 0\n    }));\n    setTimeout(() => {\n      navigate('/login');\n    }, 0);\n  }\n  React.useEffect(() => {\n    setFormFilled(email != '' && password != '');\n  }, [email, password]);\n  return /*#__PURE__*/React.createElement(Card, {\n    bgcolor: \"info\",\n    header: !currentUser.name ? \"Log In\" : \"Logged In\",\n    status: status,\n    body: !currentUser.name ? /*#__PURE__*/React.createElement(React.Fragment, null, \"Email Address\", /*#__PURE__*/React.createElement(\"br\", null), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"input\",\n      className: \"form-control\",\n      id: \"email\",\n      placeholder: \"Enter Email Address\",\n      value: email,\n      onChange: e => setEmail(e.currentTarget.value)\n    }), \" \", /*#__PURE__*/React.createElement(\"br\", null), \"Password\", /*#__PURE__*/React.createElement(\"br\", null), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      className: \"form-control\",\n      id: \"password\",\n      placeholder: \"Enter Password\",\n      value: password,\n      onChange: e => setPassword(e.currentTarget.value)\n    }), \" \", /*#__PURE__*/React.createElement(\"br\", null), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-light\",\n      onClick: logIn,\n      disabled: !formFilled\n    }, \"Log In\"), \" \", /*#__PURE__*/React.createElement(\"br\", null)) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h5\", null, \"Success!\"), /*#__PURE__*/React.createElement(\"p\", null, \"You are logged in as \", currentUser.name, \".\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-light\",\n      onClick: logOut\n    }, \"Log Out\"), \" \", /*#__PURE__*/React.createElement(\"br\", null))\n  });\n}","map":{"version":3,"names":["React","useNavigate","Card","CurrentUser","AllActivity","initializeApp","getAuth","signInWithEmailAndPassword","onAuthStateChanged","updateBalance","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","app","auth","Login","currentUser","setCurrentUser","useContext","navigate","status","setStatus","useState","email","setEmail","password","setPassword","formFilled","setFormFilled","validate","field","label","setTimeout","url","concat","getBalance","res","fetch","data","json","user","balance","name","logIn","success","promise","then","resp","catch","e","alert","message","logOut","useEffect","createElement","bgcolor","header","body","Fragment","type","className","id","placeholder","value","onChange","currentTarget","onClick","disabled"],"sources":["/Users/Regan/Documents/GitHub/BadBank/public/src/Components/login.js"],"sourcesContent":["import React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Card, CurrentUser, AllActivity } from \"./context\";\nimport { initializeApp } from \"firebase/app\";\n\nimport { getAuth, signInWithEmailAndPassword, onAuthStateChanged } from 'firebase/auth';\nimport { updateBalance } from \"../../../dal\";\n\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDhKNCusOPW2y52bMwLnOrXIy-u1y1Q4KI\",\n  authDomain: \"bank-f0c47.firebaseapp.com\",\n  projectId: \"bank-f0c47\",\n  storageBucket: \"bank-f0c47.appspot.com\",\n  messagingSenderId: \"710670974978\",\n  appId: \"1:710670974978:web:b724e76530555264b8271b\"\n};\n\n\nconst app = initializeApp(firebaseConfig);\nconst auth = getAuth(app);\n\n\nexport default function Login(){\n    const { currentUser, setCurrentUser} = React.useContext(CurrentUser);\n   //const currentUser = React.useContext(CurrentUser);\n    const navigate = useNavigate();\n\n  //  const allActivity = React.useContext(AllActivity);\n    const [status, setStatus] = React.useState('');\n    const [email, setEmail] = React.useState('');\n    const [password, setPassword] = React.useState('');\n    const [formFilled, setFormFilled] = React.useState(true);\n\n\n    function validate(field, label){\n        if (!field) {\n            setStatus('Error: ' + label);\n            setTimeout(() => setStatus(''), 3000); \n            return false;\n        }\n        return true;\n    }\n    \n    const url = `/account/login/${email}/${password}`;\n\n    async function getBalance() {\n        var res = await fetch(url);\n        var data = await res.json();\n      setCurrentUser(user => ({\n        ...user,\n        balance: data.balance,\n        name: data.name\n      }));     \n    }\n    \n    async function logIn(){\n        if(!validate(email, 'Invalid Email')) return;\n        if(!validate(password, 'Invalid Password')) return;\n        let success = false;\n\n        const promise = auth.signInWithEmailAndPassword(\n            email,\n          password\n        );\n        \n        promise.then((resp) => {\n          setCurrentUser(user => ({\n            email: email,\n            name: '',\n            balance: 0\n          })); \n          updateBalance();\n          success = true;\n        });\n        promise.catch((e) => alert('Error:', e.message));\n\n\n\n\n        // var res = await fetch(url);\n\n        // const contentType = res.headers.get(\"content-type\");\n        // if (!contentType || !contentType.includes(\"application/json\")) {\n        //     alert('Error: No account found for that email. Please try again, or create a new account.');\n        //     return;  \n        // }\n\n        // var data = await res.json();\n\n        // if (password === data.password) {\n        //     success = true;\n        //     setCurrentUser(user => ({\n        //         email: email,\n        //         name: data.name,\n        //         balance: data.balance\n        //       }));  \n \n        //       setTimeout(() => {\n        //         navigate('/');\n        //     }, 0);\n        // }\n\n     //       let date = new Date();\n     //   allActivity.push({key:allActivity.length, userID:user.key, name:user.name, activity: `${user.name} logged in`, balance:user.balance, time:date})\n\n        if (!success) {\n            alert('Error: Your password was incorrect. Please try again.');\n        }\n    }\n\n    function logOut(){\n        setCurrentUser(user => ({\n            email: '',\n            name: '',\n            balance: 0\n          }));  \n          setTimeout(() => {\n            navigate('/login');\n        }, 0);\n    }\n\n    React.useEffect(() =>{\n        setFormFilled(email != '' && password != ''); \n    }, [email, password])\n\n    return (\n        <Card \n        bgcolor=\"info\"\n        header={(!currentUser.name) ? \"Log In\" :\"Logged In\"}\n        status={status}\n        body={(!currentUser.name) ? (\n            <>\n            Email Address<br/>\n            <input type=\"input\" className=\"form-control\" id=\"email\" placeholder=\"Enter Email Address\" value={email} onChange={e => setEmail(e.currentTarget.value)} /> <br />\n            Password<br/>\n            <input type=\"password\" className=\"form-control\" id=\"password\" placeholder=\"Enter Password\" value={password} onChange={e => setPassword(e.currentTarget.value)} /> <br />\n            <button type=\"submit\" className=\"btn btn-light\" onClick={logIn} disabled={!formFilled}>Log In</button> <br />\n        </>\n        ) : (\n            <>\n            <h5>Success!</h5>\n            <p>You are logged in as {currentUser.name}.</p>\n            <button type=\"submit\" className=\"btn btn-light\" onClick={logOut}>Log Out</button> <br />\n\n            </>\n        )}\n        />\n    );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}