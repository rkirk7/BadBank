{"ast":null,"code":"import React, { useEffect } from \"react\";\nimport { Table, CurrentUser } from \"./context\";\nimport { useNavigate } from \"react-router-dom\";\nimport { checkAuthorization } from \"./firebase\";\nexport default function AllData() {\n  const navigate = useNavigate();\n  const {\n    currentUser,\n    setCurrentUser\n  } = React.useContext(CurrentUser);\n  const [loading, setLoading] = React.useState(true);\n  const [showAllUsers, setShowAllUsers] = React.useState(true);\n  const [showActivity, setShowActivity] = React.useState(true);\n  const [userSearch, setUserSearch] = React.useState('');\n  const [loggedIn, setLoggedIn] = React.useState(false);\n  const [userList, setUserList] = React.useState([]);\n  const [activityList, setActivityList] = React.useState([]);\n  useEffect(() => {\n    async function loadPage() {\n      if (!currentUser.email) {\n        let res = await checkAuthorization(setCurrentUser);\n        if (!res) {\n          navigate('/');\n          return;\n        }\n      }\n      const response = await getTheData();\n      setUserList(response.userList);\n      setActivityList(response.activityList);\n      setLoading(false);\n    }\n    async function getTheData() {\n      let userList = [];\n      let activityList = [];\n      if (currentUser.role === 'admin') {\n        let accountRes = await fetch('/account/all');\n        let data = await accountRes.json();\n        let userSearchQuery = data.filter(user => user.email && user.email.toLowerCase().includes(userSearch.toLowerCase())) || [];\n        userList = userSearchQuery.map(user => /*#__PURE__*/React.createElement(\"tr\", {\n          key: user._id\n        }, /*#__PURE__*/React.createElement(\"td\", null, user.name), /*#__PURE__*/React.createElement(\"td\", null, \"$\", user.balance), /*#__PURE__*/React.createElement(\"td\", null, user.email), /*#__PURE__*/React.createElement(\"td\", null, user._id)));\n      }\n      if (currentUser.role !== '') {\n        let res = await fetch(\"/account/getActivity/\".concat(currentUser.email, \"/\").concat(currentUser.role));\n        let activityData = await res.json();\n        let activitySearchQuery = activityData.filter(account => account.email && account.email.toLowerCase().includes(userSearch.toLowerCase())) || [];\n        activityList = activitySearchQuery.slice().reverse().map(account => /*#__PURE__*/React.createElement(\"tr\", {\n          key: account._id\n        }, /*#__PURE__*/React.createElement(\"td\", null, account.email), /*#__PURE__*/React.createElement(\"td\", null, account.activity), /*#__PURE__*/React.createElement(\"td\", null, new Date(account.date).toLocaleString())));\n      }\n      return {\n        activityList,\n        userList\n      };\n    }\n    loadPage();\n  }, [currentUser.email, currentUser.role, setCurrentUser, userSearch]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, !loading && /*#__PURE__*/React.createElement(\"div\", null, currentUser.role === \"admin\" && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"tableheader\"\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Search by Email\",\n    value: userSearch,\n    onChange: e => {\n      setUserSearch(e.currentTarget.value);\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"tableheader\"\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    className: \"myLink\",\n    onClick: () => setShowAllUsers(!showAllUsers)\n  }, \"Admin: All Users\")), showAllUsers && /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'center',\n      marginBottom: '10px'\n    }\n  }), showAllUsers && /*#__PURE__*/React.createElement(Table, {\n    id: \"usertable\",\n    col1: \"Name\",\n    col2: \"Balance\",\n    col3: \"Email\",\n    col4: \"ID\",\n    list: userList\n  }))), /*#__PURE__*/React.createElement(\"div\", null, currentUser.role === \"admin\" ? /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"tableheader\"\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    className: \"myLink\",\n    onClick: () => setShowActivity(!showActivity)\n  }, \"Admin: All Bank Activity\"))) : /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"tableheader\"\n  }, \"My Activity\"), showActivity && /*#__PURE__*/React.createElement(Table, {\n    id: \"activitytable\",\n    col1: \"Email\",\n    col2: \"Activity\",\n    col3: \"Date\",\n    list: activityList\n  }))), \";\");\n}","map":{"version":3,"names":["React","useEffect","Table","CurrentUser","useNavigate","checkAuthorization","AllData","navigate","currentUser","setCurrentUser","useContext","loading","setLoading","useState","showAllUsers","setShowAllUsers","showActivity","setShowActivity","userSearch","setUserSearch","loggedIn","setLoggedIn","userList","setUserList","activityList","setActivityList","loadPage","email","res","response","getTheData","role","accountRes","fetch","data","json","userSearchQuery","filter","user","toLowerCase","includes","map","createElement","key","_id","name","balance","concat","activityData","activitySearchQuery","account","slice","reverse","activity","Date","date","toLocaleString","Fragment","className","type","placeholder","value","onChange","e","currentTarget","onClick","style","display","justifyContent","marginBottom","id","col1","col2","col3","col4","list"],"sources":["/Users/Regan/Documents/GitHub/BadBank/public/src/Components/alldata.js"],"sourcesContent":["import React, {useEffect} from \"react\";\nimport {Table, CurrentUser} from \"./context\";\nimport { useNavigate } from \"react-router-dom\";\nimport { checkAuthorization } from \"./firebase\";\n\nexport default function AllData(){\n  const navigate = useNavigate();\n\n  const { currentUser, setCurrentUser } = React.useContext(CurrentUser);\n  const [loading, setLoading] = React.useState(true);\n  const [showAllUsers, setShowAllUsers] = React.useState(true);\n  const [showActivity, setShowActivity] = React.useState(true);\n  const [userSearch, setUserSearch] = React.useState('');\n  const [loggedIn, setLoggedIn] = React.useState(false);\n  const [userList, setUserList] = React.useState([]);\n  const [activityList, setActivityList] = React.useState([]);\n\n\n  useEffect(() => {\n    async function loadPage() {\n        if (!currentUser.email) {\n          let res = await checkAuthorization(setCurrentUser);\n          if (!res) {\n            navigate('/');\n            return;\n          }\n        } \n\n        const response = await getTheData();\n        setUserList(response.userList);\n        setActivityList(response.activityList);\n        setLoading(false);\n    }\n\n    async function getTheData() {\n      let userList = [];\n      let activityList = [];\n    \n      if (currentUser.role === 'admin') {\n        let accountRes = await fetch('/account/all');\n        let data = await accountRes.json()\n      let userSearchQuery = data.filter((user) =>\n         user.email && user.email.toLowerCase().includes(userSearch.toLowerCase())\n      ) || [];\n      \n    userList = userSearchQuery.map(user => (\n        <tr key={user._id}>\n          <td>{user.name}</td>\n          <td>${user.balance}</td>\n          <td>{user.email}</td>\n          <td>{user._id}</td>\n        </tr>\n      ));\n    }\n    \n    if (currentUser.role !== '') {\n      let res = await fetch(`/account/getActivity/${currentUser.email}/${currentUser.role}`)\n      let activityData = await res.json();\n    \n    let activitySearchQuery = activityData.filter((account) =>\n      account.email && account.email.toLowerCase().includes(userSearch.toLowerCase())\n    ) || [];\n    \n    activityList = activitySearchQuery.slice().reverse().map(account => (\n      <tr key={account._id}>\n        <td>{account.email}</td>\n        <td>{account.activity}</td>\n        <td>{new Date(account.date).toLocaleString()}</td>\n      </tr>\n    ));\n    }\n    \n    return {\n      activityList, \n      userList\n    }\n    }\n\n    loadPage();\n}, [currentUser.email, currentUser.role, setCurrentUser, userSearch]);\n\n\nreturn (\n  <>\n      {!loading && (\n  <div>\n      {currentUser.role === \"admin\" && (\n        <>\n        <h1 className=\"tableheader\">\n         <input type=\"text\" placeholder=\"Search by Email\" value={userSearch} onChange={e => {\n          setUserSearch(e.currentTarget.value);\n          }}></input>\n          </h1>\n        <div>\n         <h1 className=\"tableheader\"><a  className=\"myLink\" onClick={ () => setShowAllUsers(!showAllUsers) }>Admin: All Users</a></h1>\n        { showAllUsers && ( <div style={{ display: 'flex', justifyContent: 'center', marginBottom: '10px' }}>\n                </div>\n                )}\n      \n      {showAllUsers && (\n      \n  <Table\n  id=\"usertable\"\n  col1=\"Name\"\n  col2=\"Balance\"\n  col3=\"Email\"\n  col4=\"ID\"\n  list={userList}\n  />\n      )}\n      </div>\n     </>)}\n     <div>\n     {currentUser.role === \"admin\" ? (\n      <div>\n     <h1 className=\"tableheader\"><a className=\"myLink\" onClick= { () => setShowActivity(!showActivity)}>Admin: All Bank Activity</a></h1>\n     </div>\n     ) : (\n      <h1 className=\"tableheader\">My Activity</h1>\n     ) }\n      {showActivity && (\n\n<Table\n  id=\"activitytable\"\n  col1=\"Email\"\n  col2=\"Activity\"\n  col3=\"Date\"\n  list={activityList}\n  />\n      )}\n  </div>\n  </div>\n      )};\n  </>\n);\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}