{"ast":null,"code":"var _jsxFileName = \"/Users/Regan/Documents/GitHub/BadBank/public/src/Components/deposit.js\";\nimport React from \"react\";\nimport { Card, CurrentUser, AllActivity } from \"./context\";\nexport default function Deposit() {\n  const {\n    currentUser,\n    setCurrentUser\n  } = React.useContext(CurrentUser);\n  //  const allActivity = React.useContext(AllActivity);\n\n  const [deposit, setDeposit] = React.useState(0);\n  const [lastDeposit, setLastDeposit] = React.useState(0);\n  const [balance, setBalance] = React.useState(currentUser.balance);\n  const [formFilled, setFormFilled] = React.useState(true);\n  const [depositComplete, setDepositComplete] = React.useState(false);\n  const url = `/account/balance/${currentUser.email}`;\n  React.useEffect(() => {\n    getBalance();\n  }, []);\n  async function getBalance() {\n    var res = await fetch(url);\n    var data = await res.json();\n    setBalance(data.balance);\n  }\n  function makeDeposit() {\n    if (isNaN(Number(deposit))) {\n      alert('Your deposit must be a valid number.');\n      return;\n    }\n    if (Number(deposit) <= 0) {\n      alert('Your deposit cannot be a negative number.');\n      return;\n    }\n    let newBalance = Number(deposit) + Number(balance);\n    const url = `/account/updateBalance/${currentUser.email}/${newBalance}`;\n    (async () => {\n      var res = await fetch(url);\n      setBalance(newBalance);\n      setCurrentUser(user => ({\n        ...user,\n        balance: newBalance\n      }));\n      setLastDeposit(deposit);\n      setDeposit(0);\n      setDepositComplete(true);\n    })();\n\n    //  let date = new Date();\n    //   allActivity.push({key:allActivity.length, userID:currentUser.key, name:currentUser.name, activity: `${currentUser.name} deposited $${deposit}`, balance:newBalance, time:date})\n  }\n  React.useEffect(() => {\n    setFormFilled(deposit != '0' && deposit != '');\n  }, [deposit]);\n  return /*#__PURE__*/React.createElement(Card, {\n    bgcolor: \"primary\",\n    txtcolor: \"white\",\n    header: \"Make a Deposit\",\n    text: `${currentUser.name}, your balance is $${balance}.`,\n    title: depositComplete && `You have successfully deposited $${lastDeposit}!`,\n    body: /*#__PURE__*/React.createElement(React.Fragment, null, \"Deposit Amount\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 27\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"input\",\n      className: \"form-control\",\n      id: \"deposit\",\n      placeholder: \"Enter Deposit Amount\",\n      value: deposit,\n      onChange: e => {\n        setDeposit(e.currentTarget.value);\n        setDepositComplete(false);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    }), \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 23\n      }\n    })),\n    centered: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-light\",\n      onClick: makeDeposit,\n      disabled: !formFilled,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }\n    }, \"Make Deposit\"), \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 128\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  });\n}","map":{"version":3,"names":["React","Card","CurrentUser","AllActivity","Deposit","currentUser","setCurrentUser","useContext","deposit","setDeposit","useState","lastDeposit","setLastDeposit","balance","setBalance","formFilled","setFormFilled","depositComplete","setDepositComplete","url","email","useEffect","getBalance","res","fetch","data","json","makeDeposit","isNaN","Number","alert","newBalance","user","createElement","bgcolor","txtcolor","header","text","name","title","body","Fragment","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","type","className","id","placeholder","value","onChange","e","currentTarget","centered","onClick","disabled"],"sources":["/Users/Regan/Documents/GitHub/BadBank/public/src/Components/deposit.js"],"sourcesContent":["import React from \"react\";\nimport { Card, CurrentUser, AllActivity } from \"./context\";\n\n\nexport default function Deposit(){\n    const { currentUser, setCurrentUser } = React.useContext(CurrentUser);\n  //  const allActivity = React.useContext(AllActivity);\n\n    const [deposit, setDeposit] = React.useState(0);\n    const [lastDeposit, setLastDeposit] = React.useState(0);\n    const [balance, setBalance] = React.useState(currentUser.balance);\n    const [formFilled, setFormFilled] = React.useState(true);\n    const [depositComplete, setDepositComplete] = React.useState(false);\n\n    const url = `/account/balance/${currentUser.email}`;\n    React.useEffect(() => {\n        getBalance();\n      }, []);\n    \n      async function getBalance() {\n        var res = await fetch(url);\n        var data = await res.json();\n        setBalance(data.balance);\n     }\n\n    function makeDeposit() {\n        if (isNaN(Number(deposit))) {\n            alert('Your deposit must be a valid number.'); \n            return;\n        }\n        if ((Number(deposit)) <= 0) {\n            alert('Your deposit cannot be a negative number.'); \n            return;\n        }\n        let newBalance = Number(deposit) + Number(balance)\n\n        const url = `/account/updateBalance/${currentUser.email}/${newBalance}`;\n    (async () => {\n       var res = await fetch(url);\n       setBalance(newBalance);\n       setCurrentUser(user => ({\n        ...user,\n        balance: newBalance\n      })); \n        setLastDeposit(deposit);\n        setDeposit(0);\n        setDepositComplete(true);\n    })();\n\n      //  let date = new Date();\n     //   allActivity.push({key:allActivity.length, userID:currentUser.key, name:currentUser.name, activity: `${currentUser.name} deposited $${deposit}`, balance:newBalance, time:date})\n    }\n    \n\n    React.useEffect(() =>{\n        setFormFilled(deposit != '0' && deposit != ''); \n    }, [deposit])\n\n\n    return (\n        <Card \n        bgcolor=\"primary\"\n        txtcolor=\"white\"\n        header=\"Make a Deposit\"\n        text={`${currentUser.name}, your balance is $${balance}.`}       \n        title={depositComplete && `You have successfully deposited $${lastDeposit}!`}       \n        body={\n            <>\n            Deposit Amount<br/>\n            <input type=\"input\" className=\"form-control\" id=\"deposit\" placeholder=\"Enter Deposit Amount\" value={deposit} onChange={e => {\n                setDeposit(e.currentTarget.value);\n                setDepositComplete(false);\n                }} /> <br /> \n        </>\n        }\n        centered={\n    <>\n            <button type=\"submit\" className=\"btn btn-light\" onClick={makeDeposit} disabled={!formFilled}>Make Deposit</button> <br />\n    </>\n        }\n        />\n     );\n }"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,EAAEC,WAAW,EAAEC,WAAW,QAAQ,WAAW;AAG1D,eAAe,SAASC,OAAOA,CAAA,EAAE;EAC7B,MAAM;IAAEC,WAAW;IAAEC;EAAe,CAAC,GAAGN,KAAK,CAACO,UAAU,CAACL,WAAW,CAAC;EACvE;;EAEE,MAAM,CAACM,OAAO,EAAEC,UAAU,CAAC,GAAGT,KAAK,CAACU,QAAQ,CAAC,CAAC,CAAC;EAC/C,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGZ,KAAK,CAACU,QAAQ,CAAC,CAAC,CAAC;EACvD,MAAM,CAACG,OAAO,EAAEC,UAAU,CAAC,GAAGd,KAAK,CAACU,QAAQ,CAACL,WAAW,CAACQ,OAAO,CAAC;EACjE,MAAM,CAACE,UAAU,EAAEC,aAAa,CAAC,GAAGhB,KAAK,CAACU,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACO,eAAe,EAAEC,kBAAkB,CAAC,GAAGlB,KAAK,CAACU,QAAQ,CAAC,KAAK,CAAC;EAEnE,MAAMS,GAAG,GAAG,oBAAoBd,WAAW,CAACe,KAAK,EAAE;EACnDpB,KAAK,CAACqB,SAAS,CAAC,MAAM;IAClBC,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,eAAeA,UAAUA,CAAA,EAAG;IAC1B,IAAIC,GAAG,GAAG,MAAMC,KAAK,CAACL,GAAG,CAAC;IAC1B,IAAIM,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAI,CAAC,CAAC;IAC3BZ,UAAU,CAACW,IAAI,CAACZ,OAAO,CAAC;EAC3B;EAED,SAASc,WAAWA,CAAA,EAAG;IACnB,IAAIC,KAAK,CAACC,MAAM,CAACrB,OAAO,CAAC,CAAC,EAAE;MACxBsB,KAAK,CAAC,sCAAsC,CAAC;MAC7C;IACJ;IACA,IAAKD,MAAM,CAACrB,OAAO,CAAC,IAAK,CAAC,EAAE;MACxBsB,KAAK,CAAC,2CAA2C,CAAC;MAClD;IACJ;IACA,IAAIC,UAAU,GAAGF,MAAM,CAACrB,OAAO,CAAC,GAAGqB,MAAM,CAAChB,OAAO,CAAC;IAElD,MAAMM,GAAG,GAAG,0BAA0Bd,WAAW,CAACe,KAAK,IAAIW,UAAU,EAAE;IAC3E,CAAC,YAAY;MACV,IAAIR,GAAG,GAAG,MAAMC,KAAK,CAACL,GAAG,CAAC;MAC1BL,UAAU,CAACiB,UAAU,CAAC;MACtBzB,cAAc,CAAC0B,IAAI,KAAK;QACvB,GAAGA,IAAI;QACPnB,OAAO,EAAEkB;MACX,CAAC,CAAC,CAAC;MACDnB,cAAc,CAACJ,OAAO,CAAC;MACvBC,UAAU,CAAC,CAAC,CAAC;MACbS,kBAAkB,CAAC,IAAI,CAAC;IAC5B,CAAC,EAAE,CAAC;;IAEF;IACD;EACD;EAGAlB,KAAK,CAACqB,SAAS,CAAC,MAAK;IACjBL,aAAa,CAACR,OAAO,IAAI,GAAG,IAAIA,OAAO,IAAI,EAAE,CAAC;EAClD,CAAC,EAAE,CAACA,OAAO,CAAC,CAAC;EAGb,oBACIR,KAAA,CAAAiC,aAAA,CAAChC,IAAI;IACLiC,OAAO,EAAC,SAAS;IACjBC,QAAQ,EAAC,OAAO;IAChBC,MAAM,EAAC,gBAAgB;IACvBC,IAAI,EAAE,GAAGhC,WAAW,CAACiC,IAAI,sBAAsBzB,OAAO,GAAI;IAC1D0B,KAAK,EAAEtB,eAAe,IAAI,oCAAoCN,WAAW,GAAI;IAC7E6B,IAAI,eACAxC,KAAA,CAAAiC,aAAA,CAAAjC,KAAA,CAAAyC,QAAA,QAAE,gBACY,eAAAzC,KAAA,CAAAiC,aAAA;MAAAS,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CAAI,CAAC,eACnB/C,KAAA,CAAAiC,aAAA;MAAOe,IAAI,EAAC,OAAO;MAACC,SAAS,EAAC,cAAc;MAACC,EAAE,EAAC,SAAS;MAACC,WAAW,EAAC,sBAAsB;MAACC,KAAK,EAAE5C,OAAQ;MAAC6C,QAAQ,EAAEC,CAAC,IAAI;QACxH7C,UAAU,CAAC6C,CAAC,CAACC,aAAa,CAACH,KAAK,CAAC;QACjClC,kBAAkB,CAAC,KAAK,CAAC;MACzB,CAAE;MAAAwB,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CAAE,CAAC,KAAC,eAAA/C,KAAA,CAAAiC,aAAA;MAAAS,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CAAK,CACjB,CACD;IACDS,QAAQ,eACZxD,KAAA,CAAAiC,aAAA,CAAAjC,KAAA,CAAAyC,QAAA,qBACQzC,KAAA,CAAAiC,aAAA;MAAQe,IAAI,EAAC,QAAQ;MAACC,SAAS,EAAC,eAAe;MAACQ,OAAO,EAAE9B,WAAY;MAAC+B,QAAQ,EAAE,CAAC3C,UAAW;MAAA2B,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAC,cAAoB,CAAC,KAAC,eAAA/C,KAAA,CAAAiC,aAAA;MAAAS,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CAAK,CAC9H,CACG;IAAAL,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACA,CAAC;AAET","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}