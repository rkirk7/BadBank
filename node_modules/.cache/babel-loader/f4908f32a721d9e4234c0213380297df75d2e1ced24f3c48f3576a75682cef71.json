{"ast":null,"code":"import React from \"react\";\nimport ReactRouterDom from \"react-router-dom\";\nimport { Card, CurrentUser, UserContext, AllActivity } from \"./context\";\nexport default function Withdraw() {\n  const currentUser = React.useContext(CurrentUser);\n  const ctx = React.useContext(UserContext);\n  const allActivity = React.useContext(AllActivity);\n  const [withdrawal, setWithdrawal] = React.useState(0);\n  const [balance, setBalance] = React.useState(currentUser.balance);\n  const [formFilled, setFormFilled] = React.useState(true);\n  const [withdrawalComplete, setWtihdrawalComplete] = React.useState(false);\n  function makeWithdrawal() {\n    if (isNaN(Number(withdrawal))) {\n      alert('Your withdrawal must be a valid number.');\n      return;\n    }\n    if (Number(withdrawal) <= 0) {\n      alert('Please enter your withdrawal amount as a positive number.');\n      return;\n    }\n    if (Number(balance) >= Number(withdrawal)) {\n      let newBalance = Number(balance) - Number(withdrawal);\n      setBalance(newBalance);\n      currentUser.balance = newBalance;\n      ctx.forEach(user => {\n        if (user.email === currentUser.email) {\n          user.balance = newBalance;\n        }\n        ;\n      });\n      setWtihdrawalComplete(true);\n      let date = new Date();\n      allActivity.push({\n        key: allActivity.length,\n        userID: currentUser.key,\n        name: currentUser.name,\n        activity: \"\".concat(currentUser.name, \" withdrew $\").concat(withdrawal),\n        balance: newBalance,\n        time: date\n      });\n    } else {\n      alert(\"You do not have enough funds. Please lower the withdrawal amount.\");\n    }\n  }\n  React.useEffect(() => {\n    setFormFilled(withdrawal != '0' && withdrawal != '');\n  }, [withdrawal]);\n  return /*#__PURE__*/React.createElement(Card, {\n    bgcolor: \"primary\",\n    txtcolor: \"white\",\n    header: \"Make a Withdrawal\",\n    text: currentUser.name != '' ? \"\".concat(currentUser.name, \", your balance is $\").concat(balance, \".\") : \"Please log in to make a withdrawal.\",\n    title: withdrawalComplete && \"You have successfully withdrawn $\".concat(withdrawal, \"!\"),\n    body: currentUser.name != '' ? /*#__PURE__*/React.createElement(React.Fragment, null, \"Withdrawal Amount\", /*#__PURE__*/React.createElement(\"br\", null), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"input\",\n      className: \"form-control\",\n      id: \"withdrawal\",\n      placeholder: \"Enter Withdrawal Amount\",\n      value: withdrawal,\n      onChange: e => setWithdrawal(e.currentTarget.value)\n    }), \" \", /*#__PURE__*/React.createElement(\"br\", null), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-light\",\n      onClick: makeWithdrawal,\n      disabled: !formFilled\n    }, \"Make Withdrawal\"), \" \", /*#__PURE__*/React.createElement(\"br\", null)) : /*#__PURE__*/React.createElement(React.Fragment, null)\n  });\n}","map":{"version":3,"names":["React","ReactRouterDom","Card","CurrentUser","UserContext","AllActivity","Withdraw","currentUser","useContext","ctx","allActivity","withdrawal","setWithdrawal","useState","balance","setBalance","formFilled","setFormFilled","withdrawalComplete","setWtihdrawalComplete","makeWithdrawal","isNaN","Number","alert","newBalance","forEach","user","email","date","Date","push","key","length","userID","name","activity","concat","time","useEffect","createElement","bgcolor","txtcolor","header","text","title","body","Fragment","type","className","id","placeholder","value","onChange","e","currentTarget","onClick","disabled"],"sources":["/Users/Regan/Documents/GitHub/BadBank/public/src/Components/withdraw.js"],"sourcesContent":["import React from \"react\";\nimport ReactRouterDom from \"react-router-dom\";\nimport { Card, CurrentUser, UserContext, AllActivity } from \"./context\";\n\n\nexport default function Withdraw(){\n    const currentUser = React.useContext(CurrentUser);\n    const ctx = React.useContext(UserContext);\n    const allActivity = React.useContext(AllActivity);\n\n\n    const [withdrawal, setWithdrawal] = React.useState(0);\n    const [balance, setBalance] = React.useState(currentUser.balance);\n    const [formFilled, setFormFilled] = React.useState(true);\n    const [withdrawalComplete, setWtihdrawalComplete] = React.useState(false);\n\n\n    function makeWithdrawal() {\n        if (isNaN(Number(withdrawal))) {\n            alert('Your withdrawal must be a valid number.'); \n            return;\n        }\n        if ((Number(withdrawal)) <= 0) {\n            alert('Please enter your withdrawal amount as a positive number.'); \n            return;\n        }\n\n        if (Number(balance) >= Number(withdrawal)) {\n        let newBalance = Number(balance) - Number(withdrawal)\n        setBalance(newBalance);\n        currentUser.balance = newBalance;\n        ctx.forEach(user => {\n            if (user.email === currentUser.email) { \n                user.balance = newBalance \n            };\n        });\n        setWtihdrawalComplete(true);\n        let date = new Date();\n        allActivity.push({key:allActivity.length, userID:currentUser.key, name:currentUser.name, activity: `${currentUser.name} withdrew $${withdrawal}`, balance:newBalance, time:date})\n        } else {\n            alert(\"You do not have enough funds. Please lower the withdrawal amount.\")\n        }\n    }\n\n    React.useEffect(() =>{\n        setFormFilled(withdrawal != '0' && withdrawal != ''); \n    }, [withdrawal])\n    \n    return (\n        <Card \n        bgcolor=\"primary\"\n        txtcolor=\"white\"\n        header=\"Make a Withdrawal\"\n        text={currentUser.name != '' ? `${currentUser.name}, your balance is $${balance}.` : \"Please log in to make a withdrawal.\"}       \n        title={withdrawalComplete && `You have successfully withdrawn $${withdrawal}!`}       \n        body={currentUser.name != '' ? (\n            <>\n            Withdrawal Amount<br/>\n            <input type=\"input\" className=\"form-control\" id=\"withdrawal\" placeholder=\"Enter Withdrawal Amount\" value={withdrawal} onChange={e => setWithdrawal(e.currentTarget.value)} /> <br />\n            <button type=\"submit\" className=\"btn btn-light\" onClick={makeWithdrawal} disabled={!formFilled}>Make Withdrawal</button> <br />\n        </>\n        ) : (\n            <>\n\n            </>\n        )}\n        />\n     );\n }"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}