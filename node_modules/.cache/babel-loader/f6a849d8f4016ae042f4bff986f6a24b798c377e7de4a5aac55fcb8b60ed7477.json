{"ast":null,"code":"import React from \"react\";\nimport { Card, CurrentUser } from \"./context\";\nimport { useNavigate } from \"react-router-dom\";\nexport default function Deposit() {\n  const {\n    currentUser,\n    setCurrentUser\n  } = React.useContext(CurrentUser);\n  const [deposit, setDeposit] = React.useState(0);\n  const [lastDeposit, setLastDeposit] = React.useState(0);\n  const [balance, setBalance] = React.useState(currentUser.balance);\n  const [formFilled, setFormFilled] = React.useState(true);\n  const [depositComplete, setDepositComplete] = React.useState(false);\n  const navigate = useNavigate();\n  const authorizationURL = \"/account/authorization/\";\n  async function reviewAuthorization() {\n    var res = await fetch(authorizationURL);\n    if (res.ok) {\n      let user = await res.json();\n      if (!user.email) {\n        setTimeout(() => {\n          navigate('/');\n        }, 0);\n      }\n    }\n    ;\n  }\n  React.useEffect(() => {\n    if (currentUser.email === '') {\n      reviewAuthorization();\n    } else {\n      getBalance();\n    }\n  }, []);\n  async function getBalance() {\n    const url = \"/account/balance/\".concat(currentUser.email);\n    var res = await fetch(url);\n    var data = await res.json();\n    setBalance(parseInt(data.balance));\n  }\n  function makeDeposit() {\n    if (isNaN(Number(deposit))) {\n      alert('Your deposit must be a valid number.');\n      return;\n    }\n    if (Number(deposit) <= 0) {\n      alert('Your deposit cannot be a negative number.');\n      return;\n    }\n    if (!Number.isInteger(Number(deposit))) {\n      alert('Error: You must deposit dollars only, not cents. Please round up or down and try again.');\n      return;\n    }\n    let newBalance = parseInt(deposit) + parseInt(balance);\n    const url = \"/account/updateBalance/\".concat(currentUser.email, \"/\").concat(newBalance, \"/deposit/\").concat(parseInt(deposit));\n    (async () => {\n      var res = await fetch(url);\n      setBalance(newBalance);\n      setCurrentUser(user => ({\n        ...user,\n        balance: newBalance\n      }));\n      setLastDeposit(deposit);\n      setDeposit(0);\n      setDepositComplete(true);\n    })();\n  }\n  React.useEffect(() => {\n    setFormFilled(deposit != '0' && deposit != '');\n  }, [deposit]);\n  return /*#__PURE__*/React.createElement(Card, {\n    bgcolor: \"primary\",\n    txtcolor: \"white\",\n    header: \"Make a Deposit\",\n    text: \"\".concat(currentUser.name, \", your balance is $\").concat(balance, \".\"),\n    title: depositComplete && \"You have successfully deposited $\".concat(lastDeposit, \"!\"),\n    body: /*#__PURE__*/React.createElement(React.Fragment, null, \"Deposit Amount\", /*#__PURE__*/React.createElement(\"br\", null), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"input\",\n      className: \"form-control\",\n      id: \"deposit\",\n      placeholder: \"Enter Deposit Amount\",\n      value: deposit,\n      onChange: e => {\n        setDeposit(e.currentTarget.value);\n        setDepositComplete(false);\n      }\n    }), \" \", /*#__PURE__*/React.createElement(\"br\", null)),\n    centered: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-light\",\n      onClick: makeDeposit,\n      disabled: !formFilled\n    }, \"Make Deposit\"), \" \", /*#__PURE__*/React.createElement(\"br\", null))\n  });\n}","map":{"version":3,"names":["React","Card","CurrentUser","useNavigate","Deposit","currentUser","setCurrentUser","useContext","deposit","setDeposit","useState","lastDeposit","setLastDeposit","balance","setBalance","formFilled","setFormFilled","depositComplete","setDepositComplete","navigate","authorizationURL","reviewAuthorization","res","fetch","ok","user","json","email","setTimeout","useEffect","getBalance","url","concat","data","parseInt","makeDeposit","isNaN","Number","alert","isInteger","newBalance","createElement","bgcolor","txtcolor","header","text","name","title","body","Fragment","type","className","id","placeholder","value","onChange","e","currentTarget","centered","onClick","disabled"],"sources":["/Users/Regan/Documents/GitHub/BadBank/public/src/Components/deposit.js"],"sourcesContent":["import React from \"react\";\nimport { Card, CurrentUser } from \"./context\";\nimport { useNavigate } from \"react-router-dom\";\n\n\nexport default function Deposit(){\n    const { currentUser, setCurrentUser } = React.useContext(CurrentUser);\n    const [deposit, setDeposit] = React.useState(0);\n    const [lastDeposit, setLastDeposit] = React.useState(0);\n    const [balance, setBalance] = React.useState(currentUser.balance);\n    const [formFilled, setFormFilled] = React.useState(true);\n    const [depositComplete, setDepositComplete] = React.useState(false);\n\n    const navigate = useNavigate();\n\n    const authorizationURL = `/account/authorization/`;\n    async function reviewAuthorization() {\n       var res = await fetch(authorizationURL);\n       if (res.ok) {\n       let user = await res.json();\n       if (!user.email) {\n           setTimeout(() => {\n            navigate('/');\n        }, 0);\n      }\n      }; \n    }\n\n    React.useEffect(() => {\n        if (currentUser.email === '') {\n        reviewAuthorization();\n        } else {\n            getBalance();\n        }\n      }, []);\n    \n      async function getBalance() {\n        const url = `/account/balance/${currentUser.email}`;\n        var res = await fetch(url);\n        var data = await res.json();\n        setBalance(parseInt(data.balance));\n     }\n\n    function makeDeposit() {\n        if (isNaN(Number(deposit))) {\n            alert('Your deposit must be a valid number.'); \n            return;\n        }\n        if ((Number(deposit)) <= 0) {\n            alert('Your deposit cannot be a negative number.'); \n            return;\n        }\n        if (!Number.isInteger(Number(deposit))) {\n            alert('Error: You must deposit dollars only, not cents. Please round up or down and try again.'); \n            return;\n        }\n        let newBalance = parseInt(deposit) + parseInt(balance)\n\n        const url = `/account/updateBalance/${currentUser.email}/${newBalance}/deposit/${parseInt(deposit)}`;\n    (async () => {\n       var res = await fetch(url);\n       setBalance(newBalance);\n       setCurrentUser(user => ({\n        ...user,\n        balance: newBalance\n      })); \n        setLastDeposit(deposit);\n        setDeposit(0);\n        setDepositComplete(true);\n    })();\n    }\n    \n\n    React.useEffect(() =>{\n        setFormFilled(deposit != '0' && deposit != ''); \n    }, [deposit])\n\n\n    return (\n        <Card \n        bgcolor=\"primary\"\n        txtcolor=\"white\"\n        header=\"Make a Deposit\"\n        text={`${currentUser.name}, your balance is $${balance}.`}       \n        title={depositComplete && `You have successfully deposited $${lastDeposit}!`}       \n        body={\n            <>\n            Deposit Amount<br/>\n            <input type=\"input\" className=\"form-control\" id=\"deposit\" placeholder=\"Enter Deposit Amount\" value={deposit} onChange={e => {\n                setDeposit(e.currentTarget.value);\n                setDepositComplete(false);\n                }} /> <br /> \n        </>\n        }\n        centered={\n    <>\n            <button type=\"submit\" className=\"btn btn-light\" onClick={makeDeposit} disabled={!formFilled}>Make Deposit</button> <br />\n    </>\n        }\n        />\n     );\n }"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,EAAEC,WAAW,QAAQ,WAAW;AAC7C,SAASC,WAAW,QAAQ,kBAAkB;AAG9C,eAAe,SAASC,OAAOA,CAAA,EAAE;EAC7B,MAAM;IAAEC,WAAW;IAAEC;EAAe,CAAC,GAAGN,KAAK,CAACO,UAAU,CAACL,WAAW,CAAC;EACrE,MAAM,CAACM,OAAO,EAAEC,UAAU,CAAC,GAAGT,KAAK,CAACU,QAAQ,CAAC,CAAC,CAAC;EAC/C,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGZ,KAAK,CAACU,QAAQ,CAAC,CAAC,CAAC;EACvD,MAAM,CAACG,OAAO,EAAEC,UAAU,CAAC,GAAGd,KAAK,CAACU,QAAQ,CAACL,WAAW,CAACQ,OAAO,CAAC;EACjE,MAAM,CAACE,UAAU,EAAEC,aAAa,CAAC,GAAGhB,KAAK,CAACU,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACO,eAAe,EAAEC,kBAAkB,CAAC,GAAGlB,KAAK,CAACU,QAAQ,CAAC,KAAK,CAAC;EAEnE,MAAMS,QAAQ,GAAGhB,WAAW,CAAC,CAAC;EAE9B,MAAMiB,gBAAgB,4BAA4B;EAClD,eAAeC,mBAAmBA,CAAA,EAAG;IAClC,IAAIC,GAAG,GAAG,MAAMC,KAAK,CAACH,gBAAgB,CAAC;IACvC,IAAIE,GAAG,CAACE,EAAE,EAAE;MACZ,IAAIC,IAAI,GAAG,MAAMH,GAAG,CAACI,IAAI,CAAC,CAAC;MAC3B,IAAI,CAACD,IAAI,CAACE,KAAK,EAAE;QACbC,UAAU,CAAC,MAAM;UAChBT,QAAQ,CAAC,GAAG,CAAC;QACjB,CAAC,EAAE,CAAC,CAAC;MACP;IACA;IAAC;EACH;EAEAnB,KAAK,CAAC6B,SAAS,CAAC,MAAM;IAClB,IAAIxB,WAAW,CAACsB,KAAK,KAAK,EAAE,EAAE;MAC9BN,mBAAmB,CAAC,CAAC;IACrB,CAAC,MAAM;MACHS,UAAU,CAAC,CAAC;IAChB;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,eAAeA,UAAUA,CAAA,EAAG;IAC1B,MAAMC,GAAG,uBAAAC,MAAA,CAAuB3B,WAAW,CAACsB,KAAK,CAAE;IACnD,IAAIL,GAAG,GAAG,MAAMC,KAAK,CAACQ,GAAG,CAAC;IAC1B,IAAIE,IAAI,GAAG,MAAMX,GAAG,CAACI,IAAI,CAAC,CAAC;IAC3BZ,UAAU,CAACoB,QAAQ,CAACD,IAAI,CAACpB,OAAO,CAAC,CAAC;EACrC;EAED,SAASsB,WAAWA,CAAA,EAAG;IACnB,IAAIC,KAAK,CAACC,MAAM,CAAC7B,OAAO,CAAC,CAAC,EAAE;MACxB8B,KAAK,CAAC,sCAAsC,CAAC;MAC7C;IACJ;IACA,IAAKD,MAAM,CAAC7B,OAAO,CAAC,IAAK,CAAC,EAAE;MACxB8B,KAAK,CAAC,2CAA2C,CAAC;MAClD;IACJ;IACA,IAAI,CAACD,MAAM,CAACE,SAAS,CAACF,MAAM,CAAC7B,OAAO,CAAC,CAAC,EAAE;MACpC8B,KAAK,CAAC,yFAAyF,CAAC;MAChG;IACJ;IACA,IAAIE,UAAU,GAAGN,QAAQ,CAAC1B,OAAO,CAAC,GAAG0B,QAAQ,CAACrB,OAAO,CAAC;IAEtD,MAAMkB,GAAG,6BAAAC,MAAA,CAA6B3B,WAAW,CAACsB,KAAK,OAAAK,MAAA,CAAIQ,UAAU,eAAAR,MAAA,CAAYE,QAAQ,CAAC1B,OAAO,CAAC,CAAE;IACxG,CAAC,YAAY;MACV,IAAIc,GAAG,GAAG,MAAMC,KAAK,CAACQ,GAAG,CAAC;MAC1BjB,UAAU,CAAC0B,UAAU,CAAC;MACtBlC,cAAc,CAACmB,IAAI,KAAK;QACvB,GAAGA,IAAI;QACPZ,OAAO,EAAE2B;MACX,CAAC,CAAC,CAAC;MACD5B,cAAc,CAACJ,OAAO,CAAC;MACvBC,UAAU,CAAC,CAAC,CAAC;MACbS,kBAAkB,CAAC,IAAI,CAAC;IAC5B,CAAC,EAAE,CAAC;EACJ;EAGAlB,KAAK,CAAC6B,SAAS,CAAC,MAAK;IACjBb,aAAa,CAACR,OAAO,IAAI,GAAG,IAAIA,OAAO,IAAI,EAAE,CAAC;EAClD,CAAC,EAAE,CAACA,OAAO,CAAC,CAAC;EAGb,oBACIR,KAAA,CAAAyC,aAAA,CAACxC,IAAI;IACLyC,OAAO,EAAC,SAAS;IACjBC,QAAQ,EAAC,OAAO;IAChBC,MAAM,EAAC,gBAAgB;IACvBC,IAAI,KAAAb,MAAA,CAAK3B,WAAW,CAACyC,IAAI,yBAAAd,MAAA,CAAsBnB,OAAO,MAAI;IAC1DkC,KAAK,EAAE9B,eAAe,wCAAAe,MAAA,CAAwCrB,WAAW,MAAI;IAC7EqC,IAAI,eACAhD,KAAA,CAAAyC,aAAA,CAAAzC,KAAA,CAAAiD,QAAA,QAAE,gBACY,eAAAjD,KAAA,CAAAyC,aAAA,WAAI,CAAC,eACnBzC,KAAA,CAAAyC,aAAA;MAAOS,IAAI,EAAC,OAAO;MAACC,SAAS,EAAC,cAAc;MAACC,EAAE,EAAC,SAAS;MAACC,WAAW,EAAC,sBAAsB;MAACC,KAAK,EAAE9C,OAAQ;MAAC+C,QAAQ,EAAEC,CAAC,IAAI;QACxH/C,UAAU,CAAC+C,CAAC,CAACC,aAAa,CAACH,KAAK,CAAC;QACjCpC,kBAAkB,CAAC,KAAK,CAAC;MACzB;IAAE,CAAE,CAAC,KAAC,eAAAlB,KAAA,CAAAyC,aAAA,WAAK,CACjB,CACD;IACDiB,QAAQ,eACZ1D,KAAA,CAAAyC,aAAA,CAAAzC,KAAA,CAAAiD,QAAA,qBACQjD,KAAA,CAAAyC,aAAA;MAAQS,IAAI,EAAC,QAAQ;MAACC,SAAS,EAAC,eAAe;MAACQ,OAAO,EAAExB,WAAY;MAACyB,QAAQ,EAAE,CAAC7C;IAAW,GAAC,cAAoB,CAAC,KAAC,eAAAf,KAAA,CAAAyC,aAAA,WAAK,CAC9H;EACG,CACA,CAAC;AAET","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}