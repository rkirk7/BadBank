{"ast":null,"code":"import React from \"react\";\nimport { Card, CurrentUser } from \"./context\";\nimport { Link } from \"react-router-dom\";\nimport { useNavigate } from \"react-router-dom\";\nimport '../App.css';\nexport default function Home() {\n  const {\n    currentUser,\n    setCurrentUser\n  } = React.useContext(CurrentUser);\n  const authorizationURL = \"/account/authorization/\";\n  async () => {\n    console.log('trying to authorize from home');\n    var res = await fetch(authorizationURL);\n    let user = res.json();\n    console.log('found user:', user);\n    if (!user) {\n      setCurrentUser({\n        name: '',\n        email: '',\n        balance: 0,\n        password: '',\n        role: 'none'\n      });\n    }\n  };\n  if (currentUser.email) {\n    const url = \"/account/balance/\".concat(currentUser.email);\n    React.useEffect(() => {\n      getBalance();\n    }, []);\n    async function getBalance() {\n      var res = await fetch(url);\n      var data = await res.json();\n      setCurrentUser(user => ({\n        ...user,\n        balance: data.balance\n      }));\n    }\n  }\n  return /*#__PURE__*/React.createElement(Card, {\n    bgcolor: \"primary\",\n    txtcolor: \"white\",\n    header: \"Regan's Bad Bank\",\n    title: currentUser.name != '' ? \"Welcome, \".concat(currentUser.name, \".\") : '',\n    body: currentUser.name != '' ? \"Your current balance is $\".concat(currentUser.balance, \". You can make a deposit or withdraw fake cash!\") : /*#__PURE__*/React.createElement(React.Fragment, null, \"Please \", /*#__PURE__*/React.createElement(Link, {\n      to: \"/login\",\n      className: \"mylink\"\n    }, \"log in\"), \" or \", /*#__PURE__*/React.createElement(Link, {\n      to: \"/CreateAccount\",\n      className: \"mylink\"\n    }, \"create an account\"), \" to continue.\"),\n    centered: /*#__PURE__*/React.createElement(\"img\", {\n      src: require('../Images/BadBankLogo.png'),\n      className: \"img-fluid\",\n      alt: \"Bank Icon\"\n    })\n  });\n}","map":{"version":3,"names":["React","Card","CurrentUser","Link","useNavigate","Home","currentUser","setCurrentUser","useContext","authorizationURL","console","log","res","fetch","user","json","name","email","balance","password","role","url","concat","useEffect","getBalance","data","createElement","bgcolor","txtcolor","header","title","body","Fragment","to","className","centered","src","require","alt"],"sources":["/Users/Regan/Documents/GitHub/BadBank/public/src/Components/home.js"],"sourcesContent":["import React from \"react\";\nimport { Card, CurrentUser } from \"./context\";\nimport { Link } from \"react-router-dom\";\nimport { useNavigate } from \"react-router-dom\";\nimport '../App.css';\n\n\nexport default function Home(){\n  const { currentUser, setCurrentUser } = React.useContext(CurrentUser);\n\n  const authorizationURL = `/account/authorization/`;\n    (async () => {\n      console.log('trying to authorize from home')\n       var res = await fetch(authorizationURL);\n       let user = res.json();\n       console.log('found user:', user)\n       if (!user) {\n        setCurrentUser({\n            name: '',\n            email: '',\n            balance: 0,\n            password: '',\n            role: 'none'\n           });\n      }\n      }); \n\n    if (currentUser.email) {\n    const url = `/account/balance/${currentUser.email}`;\n\n    React.useEffect(() => {\n        getBalance();\n      }, []);\n    \n      async function getBalance() {\n        var res = await fetch(url);\n        var data = await res.json();\n      setCurrentUser(user => ({\n        ...user,\n        balance: data.balance\n      }));     \n    }\n    }\n\n    return (\n       <Card \n       bgcolor=\"primary\"\n       txtcolor=\"white\"\n       header=\"Regan's Bad Bank\"\n       title={currentUser.name != '' ? `Welcome, ${currentUser.name}.` : ''}       \n       body={currentUser.name != '' ? `Your current balance is $${currentUser.balance}. You can make a deposit or withdraw fake cash!` : \n       <>\n       Please <Link to=\"/login\" className=\"mylink\">log in</Link> or <Link to=\"/CreateAccount\" className=\"mylink\">create an account</Link> to continue.\n     </>\n      }       \n       centered={(<img src={require ('../Images/BadBankLogo.png')} className=\"img-fluid\" alt=\"Bank Icon\" />)}\n       \n       />\n    );\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,EAAEC,WAAW,QAAQ,WAAW;AAC7C,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,YAAY;AAGnB,eAAe,SAASC,IAAIA,CAAA,EAAE;EAC5B,MAAM;IAAEC,WAAW;IAAEC;EAAe,CAAC,GAAGP,KAAK,CAACQ,UAAU,CAACN,WAAW,CAAC;EAErE,MAAMO,gBAAgB,4BAA4B;EAC/C,YAAY;IACXC,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;IAC3C,IAAIC,GAAG,GAAG,MAAMC,KAAK,CAACJ,gBAAgB,CAAC;IACvC,IAAIK,IAAI,GAAGF,GAAG,CAACG,IAAI,CAAC,CAAC;IACrBL,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEG,IAAI,CAAC;IAChC,IAAI,CAACA,IAAI,EAAE;MACVP,cAAc,CAAC;QACXS,IAAI,EAAE,EAAE;QACRC,KAAK,EAAE,EAAE;QACTC,OAAO,EAAE,CAAC;QACVC,QAAQ,EAAE,EAAE;QACZC,IAAI,EAAE;MACP,CAAC,CAAC;IACP;EACA,CAAC;EAEH,IAAId,WAAW,CAACW,KAAK,EAAE;IACvB,MAAMI,GAAG,uBAAAC,MAAA,CAAuBhB,WAAW,CAACW,KAAK,CAAE;IAEnDjB,KAAK,CAACuB,SAAS,CAAC,MAAM;MAClBC,UAAU,CAAC,CAAC;IACd,CAAC,EAAE,EAAE,CAAC;IAEN,eAAeA,UAAUA,CAAA,EAAG;MAC1B,IAAIZ,GAAG,GAAG,MAAMC,KAAK,CAACQ,GAAG,CAAC;MAC1B,IAAII,IAAI,GAAG,MAAMb,GAAG,CAACG,IAAI,CAAC,CAAC;MAC7BR,cAAc,CAACO,IAAI,KAAK;QACtB,GAAGA,IAAI;QACPI,OAAO,EAAEO,IAAI,CAACP;MAChB,CAAC,CAAC,CAAC;IACL;EACA;EAEA,oBACGlB,KAAA,CAAA0B,aAAA,CAACzB,IAAI;IACL0B,OAAO,EAAC,SAAS;IACjBC,QAAQ,EAAC,OAAO;IAChBC,MAAM,EAAC,kBAAkB;IACzBC,KAAK,EAAExB,WAAW,CAACU,IAAI,IAAI,EAAE,eAAAM,MAAA,CAAehB,WAAW,CAACU,IAAI,SAAM,EAAG;IACrEe,IAAI,EAAEzB,WAAW,CAACU,IAAI,IAAI,EAAE,+BAAAM,MAAA,CAA+BhB,WAAW,CAACY,OAAO,oEAC9ElB,KAAA,CAAA0B,aAAA,CAAA1B,KAAA,CAAAgC,QAAA,QAAE,SACK,eAAAhC,KAAA,CAAA0B,aAAA,CAACvB,IAAI;MAAC8B,EAAE,EAAC,QAAQ;MAACC,SAAS,EAAC;IAAQ,GAAC,QAAY,CAAC,QAAI,eAAAlC,KAAA,CAAA0B,aAAA,CAACvB,IAAI;MAAC8B,EAAE,EAAC,gBAAgB;MAACC,SAAS,EAAC;IAAQ,GAAC,mBAAuB,CAAC,iBAClI,CACA;IACAC,QAAQ,eAAGnC,KAAA,CAAA0B,aAAA;MAAKU,GAAG,EAAEC,OAAO,CAAE,2BAA2B,CAAE;MAACH,SAAS,EAAC,WAAW;MAACI,GAAG,EAAC;IAAW,CAAE;EAAG,CAErG,CAAC;AAET","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}