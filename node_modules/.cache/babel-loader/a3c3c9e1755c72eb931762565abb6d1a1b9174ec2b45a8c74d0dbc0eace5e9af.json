{"ast":null,"code":"const {\n  initializeApp\n} = require(\"firebase/app\");\nconst {\n  getAuth,\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n  browserSessionPersistence,\n  setPersistence,\n  signOut,\n  browserLocalPersistence,\n  inMemoryPersistence\n} = require(\"firebase/auth\");\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDhKNCusOPW2y52bMwLnOrXIy-u1y1Q4KI\",\n  authDomain: \"bank-f0c47.firebaseapp.com\",\n  projectId: \"bank-f0c47\",\n  storageBucket: \"bank-f0c47.appspot.com\",\n  messagingSenderId: \"710670974978\",\n  appId: \"1:710670974978:web:b724e76530555264b8271b\"\n};\nconst firebaseApp = initializeApp(firebaseConfig);\nconst auth = getAuth();\nsetPersistence(auth, inMemoryPersistence);\nasync function createFirebase(name, email, password, requestedRole) {\n  if (!db) {\n    throw new Error('Database connection not established');\n  }\n  try {\n    if (await checkAccount(email)) {\n      return true;\n    } else {\n      await createUserWithEmailAndPassword(auth, email, password);\n      return await create(name, email, requestedRole);\n    }\n  } catch (error) {\n    console.error('Error creating user with Firebase:', error.code, error.message);\n    throw error;\n  }\n}\nasync function loginFirebase(email, password, setCurrentUser) {\n  try {\n    await signInWithEmailAndPassword(auth, email, password);\n    console.log('firebase sign in successful');\n    (async () => {\n      const url = \"/account/login/\".concat(email);\n      let res = await fetch(url);\n      if (res) {\n        var data = await res.json();\n        setCurrentUser(user => ({\n          email: data.email,\n          name: data.name,\n          balance: data.balance,\n          role: data.role\n        }));\n        return true;\n      } else {\n        return false;\n      }\n    })();\n  } catch (error) {\n    console.error('Error logging in with Firebase:', error.code, error.message);\n    return error;\n  }\n}\nasync function logout() {\n  try {\n    await signOut(auth);\n    return true;\n  } catch (error) {\n    console.error('Error during logout:', error);\n    return false;\n  }\n}\nasync function checkAuthorization() {\n  const user = auth.currentUser;\n  if (user) {\n    const url = \"/authorization/\";\n    (async () => {\n      let res = await fetch(url);\n      if (res) {\n        var data = await res.json();\n        setCurrentUser(user => ({\n          email: data.email,\n          name: data.name,\n          balance: data.balance,\n          role: data.role\n        }));\n        return true;\n      } else {\n        return false;\n      }\n    })();\n    try {\n      const res = await fetch(authorizationURL);\n      if (res.ok) {\n        let user = await res.json();\n        if (!user.email) {\n          setCurrentUser({\n            name: '',\n            email: '',\n            balance: 0,\n            password: '',\n            role: 'none'\n          });\n          navigate('/');\n        }\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  } else {\n    return console.log(\"no user found\");\n  }\n}\nmodule.exports = {\n  createFirebase,\n  loginFirebase,\n  logout,\n  checkAuthorization\n};","map":{"version":3,"names":["initializeApp","require","getAuth","createUserWithEmailAndPassword","signInWithEmailAndPassword","browserSessionPersistence","setPersistence","signOut","browserLocalPersistence","inMemoryPersistence","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseApp","auth","createFirebase","name","email","password","requestedRole","db","Error","checkAccount","create","error","console","code","message","loginFirebase","setCurrentUser","log","url","concat","res","fetch","data","json","user","balance","role","logout","checkAuthorization","currentUser","authorizationURL","ok","navigate","err","module","exports"],"sources":["/Users/Regan/Documents/GitHub/BadBank/public/src/Components/firebase.js"],"sourcesContent":["const { initializeApp } = require(\"firebase/app\");\nconst { getAuth, createUserWithEmailAndPassword, signInWithEmailAndPassword, browserSessionPersistence, setPersistence, signOut, browserLocalPersistence, inMemoryPersistence } = require(\"firebase/auth\");\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyDhKNCusOPW2y52bMwLnOrXIy-u1y1Q4KI\",\n    authDomain: \"bank-f0c47.firebaseapp.com\",\n    projectId: \"bank-f0c47\",\n    storageBucket: \"bank-f0c47.appspot.com\",\n    messagingSenderId: \"710670974978\",\n    appId: \"1:710670974978:web:b724e76530555264b8271b\"\n  };\n  \n  const firebaseApp = initializeApp(firebaseConfig);\n  const auth = getAuth();\n  setPersistence(auth, inMemoryPersistence);\n\n  async function createFirebase(name, email, password, requestedRole) {\n    if (!db) {\n        throw new Error('Database connection not established');\n    }\n    try {\n        if (await checkAccount(email)) {\n            return true;\n        } else {\n                await createUserWithEmailAndPassword(auth, email, password);\n                return await create(name, email, requestedRole);          \n        }\n      } catch (error) {\n        console.error('Error creating user with Firebase:', error.code, error.message);\n        throw error;\n      }\n  }\n\n  async function loginFirebase(email, password, setCurrentUser) {\n    try {\n        await signInWithEmailAndPassword(auth, email, password);\n        console.log('firebase sign in successful');\n\n        (async () => {\n            const url = `/account/login/${email}`;\n            let res = await fetch(url);\n            if (res) {\n            var data = await res.json();\n        \n            setCurrentUser(user => ({\n                email: data.email,\n                name: data.name,\n                balance: data.balance,\n                role: data.role\n           })); \n           return true;\n        } else {\n            return false;\n        }\n        })();\n    } catch (error) {\n        console.error('Error logging in with Firebase:', error.code, error.message);\n        return(error);\n    }\n}\n\nasync function logout() {\n    try {\n        await signOut(auth);\n        return true;\n    } catch (error) {\n        console.error('Error during logout:', error);\n        return false;\n    }\n}\n\nasync function checkAuthorization() {\n    const user = auth.currentUser;\n\n    if (user) {\n        const url = `/authorization/`;\n\n        (async () => {\n            let res = await fetch(url);\n            if (res) {\n            var data = await res.json();\n        \n            setCurrentUser(user => ({\n                email: data.email,\n                name: data.name,\n                balance: data.balance,\n                role: data.role\n           })); \n           return true;\n        } else {\n            return false;\n        }\n        })();\n\n\n\n\n\n    try {\n        const res = await fetch(authorizationURL);\n        if (res.ok) {\n            let user = await res.json();\n            if (!user.email) {\n                setCurrentUser({\n                    name: '',\n                    email: '',\n                    balance: 0,\n                    password: '',\n                    role: 'none'\n                });\n                navigate('/');\n            }\n        }\n    } catch(err) {\n        console.error(err);\n    }\n    } else {\n     return console.log(`no user found`);\n    }\n}\n\n  module.exports = {createFirebase, loginFirebase, logout, checkAuthorization}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}