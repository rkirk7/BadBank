{"ast":null,"code":"const {\n  initializeApp\n} = require(\"firebase/app\");\nconst {\n  getAuth,\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n  browserSessionPersistence,\n  setPersistence,\n  signOut,\n  browserLocalPersistence,\n  inMemoryPersistence\n} = require(\"firebase/auth\");\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDhKNCusOPW2y52bMwLnOrXIy-u1y1Q4KI\",\n  authDomain: \"bank-f0c47.firebaseapp.com\",\n  projectId: \"bank-f0c47\",\n  storageBucket: \"bank-f0c47.appspot.com\",\n  messagingSenderId: \"710670974978\",\n  appId: \"1:710670974978:web:b724e76530555264b8271b\"\n};\nconst firebaseApp = initializeApp(firebaseConfig);\nconst auth = getAuth();\nsetPersistence(auth, inMemoryPersistence);\nasync function createFirebase(name, email, password, requestedRole) {\n  if (!db) {\n    throw new Error('Database connection not established');\n  }\n  try {\n    if (await checkAccount(email)) {\n      return true;\n    } else {\n      await createUserWithEmailAndPassword(auth, email, password);\n      return await create(name, email, requestedRole);\n    }\n  } catch (error) {\n    console.error('Error creating user with Firebase:', error.code, error.message);\n    throw error;\n  }\n}\nasync function loginFirebase(email, password) {\n  try {\n    await signInWithEmailAndPassword(auth, email, password);\n    return await login(email);\n  } catch (error) {\n    console.error('Error logging in with Firebase:', error.code, error.message);\n    return error;\n  }\n}\nasync function logout() {\n  try {\n    await signOut(auth);\n    return;\n  } catch (error) {\n    console.error('Error during logout:', error);\n    throw error;\n  }\n}\nasync function checkAuthorization() {\n  const user = auth.currentUser;\n  if (user) {\n    const authorizationURL = \"/authorization/\";\n    try {\n      const res = await fetch(authorizationURL);\n      if (res.ok) {\n        let user = await res.json();\n        if (!user.email) {\n          setCurrentUser({\n            name: '',\n            email: '',\n            balance: 0,\n            password: '',\n            role: 'none'\n          });\n          navigate('/');\n        }\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  } else {\n    return console.log(\"no user found\");\n  }\n}\nmodule.exports = {\n  createFirebase,\n  loginFirebase,\n  logout,\n  checkAuthorization\n};","map":{"version":3,"names":["initializeApp","require","getAuth","createUserWithEmailAndPassword","signInWithEmailAndPassword","browserSessionPersistence","setPersistence","signOut","browserLocalPersistence","inMemoryPersistence","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseApp","auth","createFirebase","name","email","password","requestedRole","db","Error","checkAccount","create","error","console","code","message","loginFirebase","login","logout","checkAuthorization","user","currentUser","authorizationURL","res","fetch","ok","json","setCurrentUser","balance","role","navigate","err","log","module","exports"],"sources":["/Users/Regan/Documents/GitHub/BadBank/public/src/Components/firebase.js"],"sourcesContent":["const { initializeApp } = require(\"firebase/app\");\nconst { getAuth, createUserWithEmailAndPassword, signInWithEmailAndPassword, browserSessionPersistence, setPersistence, signOut, browserLocalPersistence, inMemoryPersistence } = require(\"firebase/auth\");\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyDhKNCusOPW2y52bMwLnOrXIy-u1y1Q4KI\",\n    authDomain: \"bank-f0c47.firebaseapp.com\",\n    projectId: \"bank-f0c47\",\n    storageBucket: \"bank-f0c47.appspot.com\",\n    messagingSenderId: \"710670974978\",\n    appId: \"1:710670974978:web:b724e76530555264b8271b\"\n  };\n  \n  const firebaseApp = initializeApp(firebaseConfig);\n  const auth = getAuth();\n  setPersistence(auth, inMemoryPersistence);\n\n  async function createFirebase(name, email, password, requestedRole) {\n    if (!db) {\n        throw new Error('Database connection not established');\n    }\n    try {\n        if (await checkAccount(email)) {\n            return true;\n        } else {\n                await createUserWithEmailAndPassword(auth, email, password);\n                return await create(name, email, requestedRole);          \n        }\n      } catch (error) {\n        console.error('Error creating user with Firebase:', error.code, error.message);\n        throw error;\n      }\n  }\n\n  async function loginFirebase(email, password) {\n    try {\n        await signInWithEmailAndPassword(auth, email, password);\n        return await login(email);\n\n    } catch (error) {\n        console.error('Error logging in with Firebase:', error.code, error.message);\n        return(error);\n    }\n}\n\nasync function logout() {\n    try {\n        await signOut(auth);\n        return;\n    } catch (error) {\n        console.error('Error during logout:', error);\n        throw error;\n    }\n}\n\nasync function checkAuthorization() {\n    const user = auth.currentUser;\n\n    if (user) {\n        const authorizationURL = `/authorization/`;\n    try {\n        const res = await fetch(authorizationURL);\n        if (res.ok) {\n            let user = await res.json();\n            if (!user.email) {\n                setCurrentUser({\n                    name: '',\n                    email: '',\n                    balance: 0,\n                    password: '',\n                    role: 'none'\n                });\n                navigate('/');\n            }\n        }\n    } catch(err) {\n        console.error(err);\n    }\n    } else {\n     return console.log(`no user found`);\n    }\n}\n\n  module.exports = {createFirebase, loginFirebase, logout, checkAuthorization}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}