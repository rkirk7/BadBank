{"ast":null,"code":"import React from \"react\";\nimport { UserContext, CurrentUser, AllActivity, Card } from \"./context\";\nexport default function CreateAccount() {\n  const [show, setShow] = React.useState(true);\n  const [status, setStatus] = React.useState('');\n  const [name, setName] = React.useState('');\n  const [email, setEmail] = React.useState('');\n  const [password, setPassword] = React.useState('');\n  const [formFilled, setFormFilled] = React.useState(true);\n  const currentUser = React.useContext(CurrentUser);\n  function validate(field, label) {\n    if (!field) {\n      setStatus('Error: ' + label);\n      setTimeout(() => setStatus(''), 3000);\n      return false;\n    }\n    return true;\n  }\n  function handleCreate() {\n    if (!validate(name, 'name')) {\n      alert('Name is a required field.');\n      return;\n    }\n    if (!validate(email, 'email')) {\n      alert('email is a required field.');\n      return;\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(email)) {\n      alert(\"Your email address is not formatted correctly.\");\n      return;\n    }\n    if (!validate(password, 'password')) {\n      alert('Password is a required field.');\n      return;\n    }\n    if (password.length < 8) {\n      alert('Your password must be at least eight characters.');\n      return;\n    }\n    currentUser.loggedin = true;\n    currentUser.email = email;\n    currentUser.name = name;\n    currentUser.balance = 0;\n    const url = \"/account/create/\".concat(name, \"/\").concat(email, \"/\").concat(password);\n    async () => {\n      var res = await fetch(url);\n      var data = await res.json();\n      console.log(data);\n    };\n  }\n  ;\n  setShow(false);\n  function clearForm() {\n    setName('');\n    setEmail('');\n    setPassword('');\n    setFormFilled(false);\n    setShow(true);\n  }\n  React.useEffect(() => {\n    setFormFilled(name != '' && email != '' && password != '');\n  }, [name, email, password]);\n  return /*#__PURE__*/React.createElement(Card, {\n    bgcolor: \"primary\",\n    header: \"Create Account\",\n    status: status,\n    body: show ? /*#__PURE__*/React.createElement(React.Fragment, null, \"Name\", /*#__PURE__*/React.createElement(\"br\", null), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"input\",\n      className: \"form-control\",\n      id: \"name\",\n      placeholder: \"Enter Name\",\n      value: name,\n      onChange: e => setName(e.currentTarget.value)\n    }), \" \", /*#__PURE__*/React.createElement(\"br\", null), \"Email Address\", /*#__PURE__*/React.createElement(\"br\", null), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"input\",\n      className: \"form-control\",\n      id: \"email\",\n      placeholder: \"Enter Email Address\",\n      value: email,\n      onChange: e => setEmail(e.currentTarget.value)\n    }), \" \", /*#__PURE__*/React.createElement(\"br\", null), \"Password (at least 8 characters)\", /*#__PURE__*/React.createElement(\"br\", null), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      className: \"form-control\",\n      id: \"password\",\n      placeholder: \"Enter Password\",\n      value: password,\n      onChange: e => setPassword(e.currentTarget.value)\n    }), \" \", /*#__PURE__*/React.createElement(\"br\", null), /*#__PURE__*/React.createElement(\"button\", {\n      id: \"submit\",\n      type: \"submit\",\n      className: \"btn btn-light\",\n      onClick: handleCreate,\n      disabled: !formFilled\n    }, \"Create Account\"), \" \", /*#__PURE__*/React.createElement(\"br\", null)) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h5\", null, \"Success!\"), /*#__PURE__*/React.createElement(\"p\", null, \"You are logged in as \", currentUser.name, \".\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-light\",\n      onClick: clearForm\n    }, \"Create Another Account\"), \" \", /*#__PURE__*/React.createElement(\"br\", null))\n  });\n}","map":{"version":3,"names":["React","UserContext","CurrentUser","AllActivity","Card","CreateAccount","show","setShow","useState","status","setStatus","name","setName","email","setEmail","password","setPassword","formFilled","setFormFilled","currentUser","useContext","validate","field","label","setTimeout","handleCreate","alert","test","length","loggedin","balance","url","concat","res","fetch","data","json","console","log","clearForm","useEffect","createElement","bgcolor","header","body","Fragment","type","className","id","placeholder","value","onChange","e","currentTarget","onClick","disabled"],"sources":["/Users/Regan/Documents/GitHub/BadBank/public/src/Components/createaccount.js"],"sourcesContent":["import React from \"react\";\nimport { UserContext, CurrentUser, AllActivity, Card} from \"./context\";\n\nexport default function CreateAccount(){\n\n    const [show, setShow] = React.useState(true);\n    const [status, setStatus] = React.useState('');\n    const [name, setName] = React.useState('');\n    const [email, setEmail] = React.useState('');\n    const [password, setPassword] = React.useState('');\n    const [formFilled, setFormFilled] = React.useState(true);\n    const currentUser = React.useContext(CurrentUser);\n\n    function validate(field, label){\n        if (!field) {\n            setStatus('Error: ' + label);\n            setTimeout(() => setStatus(''), 3000); \n            return false;\n        }\n        return true;\n    }\n\n    function handleCreate(){\n        if(!validate(name, 'name')) {\n            alert('Name is a required field.')\n            return;\n        }\n        if(!validate(email, 'email')) {\n            alert('email is a required field.')\n            return;\n        } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(email)) {\n                alert(\"Your email address is not formatted correctly.\")\n                return;\n        }\n        if(!validate(password, 'password')) {\n            alert('Password is a required field.')\n            return;\n        }\n        if(password.length<8) {\n            alert('Your password must be at least eight characters.')\n            return;\n        }\n\n        currentUser.loggedin = true;\n        currentUser.email = email;\n        currentUser.name = name;\n        currentUser.balance = 0;\n\n            const url = `/account/create/${name}/${email}/${password}`;\n            (async () => {\n                var res = await fetch(url);\n                var data = await res.json();\n                console.log(data);\n            })\n        };\n        setShow(false);\n\n    function clearForm(){\n        setName('');\n        setEmail('');\n        setPassword('');\n        setFormFilled(false);\n        setShow(true);\n    }\n\n\n    React.useEffect(() =>{\n        setFormFilled(name != '' && email != '' && password != ''); \n    }, [name, email, password])\n\n    return (\n        <Card \n        bgcolor=\"primary\"\n        header=\"Create Account\"\n        status={status}\n        body={show ? (\n            <>\n            Name<br/>\n            <input type=\"input\" className=\"form-control\" id=\"name\" placeholder=\"Enter Name\" value={name} onChange={e => setName(e.currentTarget.value)} /> <br />\n            Email Address<br/>\n            <input type=\"input\" className=\"form-control\" id=\"email\" placeholder=\"Enter Email Address\" value={email} onChange={e => setEmail(e.currentTarget.value)} /> <br />\n            Password (at least 8 characters)<br/>\n            <input type=\"password\" className=\"form-control\" id=\"password\" placeholder=\"Enter Password\" value={password} onChange={e => setPassword(e.currentTarget.value)} /> <br />\n            <button id=\"submit\" type=\"submit\" className=\"btn btn-light\" onClick={handleCreate} disabled={!formFilled}>Create Account</button> <br />\n        </>\n        ) : (\n            <>\n            <h5>Success!</h5>\n            <p>You are logged in as {currentUser.name}.</p>\n            <button type=\"submit\" className=\"btn btn-light\" onClick={clearForm}>Create Another Account</button> <br />\n            </>\n        )}\n        />\n    );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}