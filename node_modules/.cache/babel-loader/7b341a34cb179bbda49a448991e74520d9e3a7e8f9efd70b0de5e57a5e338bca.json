{"ast":null,"code":"import React from \"react\";\nimport { Card, CurrentUser, AllActivity } from \"./context\";\nexport default function Withdraw() {\n  const {\n    currentUser,\n    setCurrentUser\n  } = React.useContext(CurrentUser);\n  const allActivity = React.useContext(AllActivity);\n  const [withdrawal, setWithdrawal] = React.useState(0);\n  const [lastWithdrawal, setLastWithdrawal] = React.useState(0);\n  const [balance, setBalance] = React.useState(currentUser.balance);\n  const [formFilled, setFormFilled] = React.useState(true);\n  const [withdrawalComplete, setWtihdrawalComplete] = React.useState(false);\n  const url = \"/account/balance/\".concat(currentUser.email);\n  React.useEffect(() => {\n    getBalance();\n  }, []);\n  async function getBalance() {\n    var res = await fetch(url);\n    var data = await res.json();\n    console.log(JSON.stringify(data));\n    setBalance(data.balance);\n  }\n  function makeWithdrawal() {\n    if (isNaN(Number(withdrawal))) {\n      alert('Your withdrawal must be a valid number.');\n      return;\n    }\n    if (Number(withdrawal) <= 0) {\n      alert('Please enter your withdrawal amount as a positive number.');\n      return;\n    }\n    if (Number(withdrawal) > Number(balance)) {\n      alert('Your balance is too low. Please enter a lower withdrawal amount.');\n      return;\n    } else {\n      let newBalance = Number(balance) - Number(withdrawal);\n      setBalance(newBalance);\n      const url = \"/account/updateBalance/\".concat(currentUser.email, \"/\").concat(newBalance);\n      (async () => {\n        var res = await fetch(url);\n        setBalance(newBalance);\n        setCurrentUser(user => ({\n          ...user,\n          balance: newBalance\n        }));\n        setLastWithdrawal(withdrawal);\n        setWithdrawal(0);\n        setWtihdrawalComplete(true);\n      })();\n\n      //     let date = new Date();\n      //      allActivity.push({key:allActivity.length, userID:currentUser.key, name:currentUser.name, activity: `${currentUser.name} withdrew $${withdrawal}`, balance:newBalance, time:date})\n    }\n  }\n  React.useEffect(() => {\n    setFormFilled(withdrawal != '0' && withdrawal != '');\n  }, [withdrawal]);\n  return /*#__PURE__*/React.createElement(Card, {\n    bgcolor: \"primary\",\n    txtcolor: \"white\",\n    header: \"Make a Withdrawal\",\n    text: \"\".concat(currentUser.name, \", your balance is $\").concat(balance, \".\"),\n    title: withdrawalComplete && \"You have successfully withdrawn $\".concat(lastWithdrawal, \"!\"),\n    body: /*#__PURE__*/React.createElement(React.Fragment, null, \"Withdrawal Amount\", /*#__PURE__*/React.createElement(\"br\", null), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"input\",\n      className: \"form-control\",\n      id: \"withdrawal\",\n      placeholder: \"Enter Withdrawal Amount\",\n      value: withdrawal,\n      onChange: e => {\n        setWithdrawal(e.currentTarget.value);\n        setWtihdrawalComplete(false);\n      }\n    }), \" \", /*#__PURE__*/React.createElement(\"br\", null)),\n    centered: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-light\",\n      onClick: makeWithdrawal,\n      disabled: !formFilled\n    }, \"Make Withdrawal\"), \" \", /*#__PURE__*/React.createElement(\"br\", null))\n  });\n}","map":{"version":3,"names":["React","Card","CurrentUser","AllActivity","Withdraw","currentUser","setCurrentUser","useContext","allActivity","withdrawal","setWithdrawal","useState","lastWithdrawal","setLastWithdrawal","balance","setBalance","formFilled","setFormFilled","withdrawalComplete","setWtihdrawalComplete","url","concat","email","useEffect","getBalance","res","fetch","data","json","console","log","JSON","stringify","makeWithdrawal","isNaN","Number","alert","newBalance","user","createElement","bgcolor","txtcolor","header","text","name","title","body","Fragment","type","className","id","placeholder","value","onChange","e","currentTarget","centered","onClick","disabled"],"sources":["/Users/Regan/Documents/GitHub/BadBank/public/src/Components/withdraw.js"],"sourcesContent":["import React from \"react\";\nimport { Card, CurrentUser, AllActivity } from \"./context\";\n\nexport default function Withdraw(){\n    const { currentUser, setCurrentUser } = React.useContext(CurrentUser);\n    const allActivity = React.useContext(AllActivity);\n\n    const [withdrawal, setWithdrawal] = React.useState(0);\n    const [lastWithdrawal, setLastWithdrawal] = React.useState(0);\n    const [balance, setBalance] = React.useState(currentUser.balance);\n    const [formFilled, setFormFilled] = React.useState(true);\n    const [withdrawalComplete, setWtihdrawalComplete] = React.useState(false);\n\n    const url = `/account/balance/${currentUser.email}`;\n    React.useEffect(() => {\n        getBalance();\n      }, []);\n    \n      async function getBalance() {\n        var res = await fetch(url);\n        var data = await res.json();\n        console.log(JSON.stringify(data));\n        setBalance(data.balance);\n     }\n\n\n\n    function makeWithdrawal() {\n        if (isNaN(Number(withdrawal))) {\n            alert('Your withdrawal must be a valid number.'); \n            return;\n        }\n        if ((Number(withdrawal)) <= 0) {\n            alert('Please enter your withdrawal amount as a positive number.'); \n            return;\n        }\n        if (Number(withdrawal) > Number(balance)) {\n            alert('Your balance is too low. Please enter a lower withdrawal amount.'); \n            return;\n        }\n\n        else {\n        let newBalance = Number(balance) - Number(withdrawal)\n        setBalance(newBalance);\n        const url = `/account/updateBalance/${currentUser.email}/${newBalance}`;\n        (async () => {\n       var res = await fetch(url);\n       setBalance(newBalance);\n       setCurrentUser(user => ({\n        ...user,\n        balance: newBalance\n      })); \n        setLastWithdrawal(withdrawal);\n        setWithdrawal(0);\n        setWtihdrawalComplete(true);\n        })();\n\n\n   //     let date = new Date();\n  //      allActivity.push({key:allActivity.length, userID:currentUser.key, name:currentUser.name, activity: `${currentUser.name} withdrew $${withdrawal}`, balance:newBalance, time:date})\n        } \n    }\n\n    React.useEffect(() =>{\n        setFormFilled(withdrawal != '0' && withdrawal != ''); \n    }, [withdrawal])\n    \n    return (\n        <Card \n        bgcolor=\"primary\"\n        txtcolor=\"white\"\n        header=\"Make a Withdrawal\"\n        text={`${currentUser.name}, your balance is $${balance}.`}       \n        title={withdrawalComplete && `You have successfully withdrawn $${lastWithdrawal}!`}       \n        body= {\n            <>\n            Withdrawal Amount<br/>\n            <input type=\"input\" className=\"form-control\" id=\"withdrawal\" placeholder=\"Enter Withdrawal Amount\" value={withdrawal} onChange={e => {\n                setWithdrawal(e.currentTarget.value);\n                setWtihdrawalComplete(false);\n                }} /> <br /> \n            </>\n        }\n        \n        centered={\n        <>          \n  <button type=\"submit\" className=\"btn btn-light\" onClick={makeWithdrawal} disabled={!formFilled}>Make Withdrawal</button> <br />\n        </>\n        }\n        />\n     );\n }"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}