{"ast":null,"code":"import React from \"react\";\nimport { CurrentUser, Card } from \"./context\";\nimport { useNavigate } from \"react-router-dom\";\nimport { createFirebase } from \"./firebase\";\nexport default function CreateAccount() {\n  const navigate = useNavigate();\n  const [status, setStatus] = React.useState('');\n  const [name, setName] = React.useState('');\n  const [email, setEmail] = React.useState('');\n  const [password, setPassword] = React.useState('');\n  const [role, setRole] = React.useState(false);\n  const [formFilled, setFormFilled] = React.useState(true);\n  const {\n    currentUser,\n    setCurrentUser\n  } = React.useContext(CurrentUser);\n  const [persistence, setPersistence] = React.useState(false);\n  function validate(field, label) {\n    if (!field) {\n      setStatus('Error: ' + label);\n      setTimeout(() => setStatus(''), 3000);\n      return false;\n    }\n    return true;\n  }\n  async function handleCreate(e) {\n    e.preventDefault();\n    let requestedRole = 'user';\n    if (!validate(name, 'name')) {\n      alert('Name is a required field.');\n      return;\n    }\n    if (!validate(email, 'email')) {\n      alert('email is a required field.');\n      return;\n    }\n    if (!email.match(/^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/)) {\n      alert(\"Your email address is not formatted correctly.\");\n      return;\n    }\n    let result = /^(([A-Za-z]+[\\-\\']?)*([A-Za-z]+)?\\s)+([A-Za-z]+[\\-\\']?)*([A-Za-z]+)?$/.test(name);\n    if (!result) {\n      alert('Please enter a valid, full name.');\n      return;\n    }\n    if (!validate(password, 'password')) {\n      alert('Password is a required field.');\n      return;\n    }\n    if (password.length < 8) {\n      alert('Your password must have at least eight characters.');\n      return;\n    }\n    try {\n      if (role) {\n        requestedRole = 'requestedAdmin';\n        alert('You have requested administrative access to the website. For now, you will have user access until the bank administrator can review your request.');\n      }\n      let res = await createFirebase(name, email, password, persistence, requestedRole, setCurrentUser);\n      if (res === 'Error') {\n        alert('Error: There was an error creating your account. Please try again.');\n        return;\n      } else if (res === 'Account exists') {\n        alert('An account for this email address already exists. Please log in.');\n      } else if (res === 'Account created') {\n        alert('Success! Your account has been created and you are now logged in.');\n        setTimeout(() => {\n          navigate('/');\n        }, 0);\n      } else {\n        alert('There was an error creating your account. Please try again.');\n      }\n    } catch (err) {\n      alert('Error: There was an error creating your account. Please try again.');\n      throw err;\n    }\n  }\n  React.useEffect(() => {\n    setFormFilled(name != '' && email != '' && password != '');\n  }, [name, email, password]);\n  return /*#__PURE__*/React.createElement(Card, {\n    bgcolor: \"primary\",\n    header: \"Create Account\",\n    status: status,\n    body: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"form\", null, \"Name\", /*#__PURE__*/React.createElement(\"br\", null), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"input\",\n      className: \"form-control\",\n      id: \"name\",\n      placeholder: \"Enter Name\",\n      value: name,\n      onChange: e => setName(e.currentTarget.value)\n    }), \" \", /*#__PURE__*/React.createElement(\"br\", null), \"Email Address\", /*#__PURE__*/React.createElement(\"br\", null), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"input\",\n      className: \"form-control\",\n      id: \"email\",\n      placeholder: \"Enter Email Address\",\n      value: email,\n      onChange: e => setEmail(e.currentTarget.value)\n    }), \" \", /*#__PURE__*/React.createElement(\"br\", null), \"Password (at least 8 characters)\", /*#__PURE__*/React.createElement(\"br\", null), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      className: \"form-control\",\n      id: \"password\",\n      placeholder: \"Enter Password\",\n      value: password,\n      onChange: e => setPassword(e.currentTarget.value)\n    }), \" \", /*#__PURE__*/React.createElement(\"br\", null), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      className: \"form-check-input\",\n      id: \"checkbox\",\n      checked: role,\n      onChange: e => setRole(e.currentTarget.checked)\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"checkbox\",\n      className: \"form-check-label\"\n    }, \"Request administrative access\"), /*#__PURE__*/React.createElement(\"br\", null), /*#__PURE__*/React.createElement(\"br\", null), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      className: \"form-check-input\",\n      id: \"persistencecheck\",\n      checked: persistence,\n      onChange: e => setPersistence(e.currentTarget.checked)\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"checkbox\",\n      className: \"form-check-label\"\n    }, \"Remember Me\"), /*#__PURE__*/React.createElement(\"br\", null), /*#__PURE__*/React.createElement(\"br\", null), /*#__PURE__*/React.createElement(\"button\", {\n      id: \"submit\",\n      type: \"submit\",\n      className: \"btn btn-light\",\n      onClick: handleCreate,\n      disabled: !formFilled\n    }, \"Create Account\"), \" \", /*#__PURE__*/React.createElement(\"br\", null)))\n  });\n}","map":{"version":3,"names":["React","CurrentUser","Card","useNavigate","createFirebase","CreateAccount","navigate","status","setStatus","useState","name","setName","email","setEmail","password","setPassword","role","setRole","formFilled","setFormFilled","currentUser","setCurrentUser","useContext","persistence","setPersistence","validate","field","label","setTimeout","handleCreate","e","preventDefault","requestedRole","alert","match","result","test","length","res","err","useEffect","createElement","bgcolor","header","body","Fragment","type","className","id","placeholder","value","onChange","currentTarget","checked","htmlFor","onClick","disabled"],"sources":["/Users/Regan/Documents/GitHub/BadBank/public/src/Components/createaccount.js"],"sourcesContent":["import React from \"react\";\nimport { CurrentUser, Card} from \"./context\";\nimport { useNavigate } from \"react-router-dom\";\nimport { createFirebase } from \"./firebase\";\n\nexport default function CreateAccount(){\n\n    const navigate = useNavigate();\n    const [status, setStatus] = React.useState('');\n    const [name, setName] = React.useState('');\n    const [email, setEmail] = React.useState('');\n    const [password, setPassword] = React.useState('');\n    const [role, setRole] = React.useState(false);\n    const [formFilled, setFormFilled] = React.useState(true);\n    const { currentUser, setCurrentUser } = React.useContext(CurrentUser);\n    const [persistence, setPersistence] = React.useState(false);\n\n\n    function validate(field, label){\n        if (!field) {\n            setStatus('Error: ' + label);\n            setTimeout(() => setStatus(''), 3000); \n            return false;\n        }\n        return true;\n    }\n\n    async function handleCreate(e) {\n        e.preventDefault();\n        let requestedRole = 'user';\n        if(!validate(name, 'name')) {\n            alert('Name is a required field.')\n            return;\n        }\n        if(!validate(email, 'email')) {\n            alert('email is a required field.')\n            return;\n        } \n        if (!email.match(/^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/)) {\n            alert(\"Your email address is not formatted correctly.\");\n            return;\n        }\n        \n        let result = /^(([A-Za-z]+[\\-\\']?)*([A-Za-z]+)?\\s)+([A-Za-z]+[\\-\\']?)*([A-Za-z]+)?$/.test(name);\n        if (!result) {\n            alert('Please enter a valid, full name.')\n            return;\n        }\n        if(!validate(password, 'password')) {\n            alert('Password is a required field.')\n            return;\n        }\n        if(password.length<8) {\n            alert('Your password must have at least eight characters.')\n            return;\n        }\n            try {\n                if (role) {\n                    requestedRole = 'requestedAdmin';\n                    alert('You have requested administrative access to the website. For now, you will have user access until the bank administrator can review your request.')\n                }\n                let res = await createFirebase(name, email, password, persistence, requestedRole, setCurrentUser);\n                if (res === 'Error') {\n                    alert('Error: There was an error creating your account. Please try again.');\n                    return;\n                } else if (res === 'Account exists') {\n                    alert('An account for this email address already exists. Please log in.');\n                } else if (res === 'Account created') {\n                    alert('Success! Your account has been created and you are now logged in.');\n                                   setTimeout(() => {\n                                     navigate('/');\n                                 }, 0);\n                } else {\n                    alert('There was an error creating your account. Please try again.');\n                }\n    } catch (err) {\n        alert('Error: There was an error creating your account. Please try again.');\n        throw(err);\n    }\n}\n\n    React.useEffect(() =>{\n        setFormFilled(name != '' && email != '' && password != ''); \n    }, [name, email, password])\n\n    return (\n        <Card \n        bgcolor=\"primary\"\n        header=\"Create Account\"\n        status={status}\n        body={\n            <>\n            <form>\n            Name<br/>\n            <input type=\"input\" className=\"form-control\" id=\"name\" placeholder=\"Enter Name\" value={name} onChange={e => setName(e.currentTarget.value)} /> <br />\n            Email Address<br/>\n            <input type=\"input\" className=\"form-control\" id=\"email\" placeholder=\"Enter Email Address\" value={email} onChange={e => setEmail(e.currentTarget.value)} /> <br />\n            Password (at least 8 characters)<br/>\n            <input type=\"password\" className=\"form-control\" id=\"password\" placeholder=\"Enter Password\" value={password} onChange={e => setPassword(e.currentTarget.value)} /> <br />\n            <input type=\"checkbox\" className=\"form-check-input\" id=\"checkbox\" checked={role} onChange={e => setRole(e.currentTarget.checked)}/>\n        <label htmlFor=\"checkbox\" className=\"form-check-label\">\n          Request administrative access\n        </label><br /><br />\n        <input type=\"checkbox\" className=\"form-check-input\" id=\"persistencecheck\" checked={persistence} onChange={e => setPersistence(e.currentTarget.checked)}/>\n        <label htmlFor=\"checkbox\" className=\"form-check-label\">\n          Remember Me\n        </label><br /><br />\n            <button id=\"submit\" type=\"submit\" className=\"btn btn-light\" onClick={handleCreate} disabled={!formFilled}>Create Account</button> <br />\n            </form>\n        </>\n        }\n        />\n    );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}