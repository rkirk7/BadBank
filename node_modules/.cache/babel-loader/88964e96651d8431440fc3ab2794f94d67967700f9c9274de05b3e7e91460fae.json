{"ast":null,"code":"import React, { useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Card, CurrentUser } from \"./context\";\nimport { loginFirebase, logout } from \"./firebase\";\nexport default function Login() {\n  const {\n    currentUser,\n    setCurrentUser\n  } = React.useContext(CurrentUser);\n  const navigate = useNavigate();\n  const [status, setStatus] = React.useState('');\n  const [email, setEmail] = React.useState('');\n  const [password, setPassword] = React.useState('');\n  const [formFilled, setFormFilled] = React.useState(true);\n  function validate(field, label) {\n    if (!field) {\n      setStatus('Error: ' + label);\n      setTimeout(() => setStatus(''), 3000);\n      return false;\n    }\n    return true;\n  }\n  const logOutUrl = \"/account/logout/\";\n  async function logIn(e) {\n    e.preventDefault();\n    if (!validate(email, 'Invalid Email')) return;\n    if (!validate(password, 'Invalid Password')) return;\n    if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(email)) {\n      alert(\"Your email address is not formatted correctly.\");\n      return;\n    }\n    if (password.length < 8) {\n      alert('Your password is incorrect.');\n      return;\n    }\n    let res = await loginFirebase(email, password, setCurrentUser);\n    if (!res) {\n      alert('There was an error loggin in. Please try again.');\n    } else {\n      alert('Success! You are now logged in.');\n      setTimeout(() => {\n        navigate('/');\n      }, 0);\n    }\n  }\n\n  //     async function logIn(e){\n  //         e.preventDefault();\n  //         if(!validate(email, 'Invalid Email')) return;\n  //         if(!validate(password, 'Invalid Password')) return;\n  //          if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(email)) {\n  //             alert(\"Your email address is not formatted correctly.\")\n  //             return;\n  //          }\n  //          if(password.length<8) {\n  //              alert('Your password is incorrect.')\n  //              return;\n  //          }\n  //          await loginFirebase(email, password);\n\n  //          const url = `/account/login/`;\n  //         try {\n  //             var res = await fetch(url, {\n  //                 method: 'POST',\n  //                 headers: {\n  //                     'Content-Type': 'application/json',\n  //                 },\n  //                 body: JSON.stringify({ email, password }),\n  //             });\n\n  //          var data = await res.json();\n  //          if (data.code && data.name === 'FirebaseError') {\n  //             alert(\"Something went wrong. Please check your credentials and try again.\")\n  //             return;\n  //          }\n  //              setCurrentUser({\n  //                  email: email,\n  //                  name: data.name,\n  //                  balance: data.balance,\n  //                  role: data.role\n  //                });  \n\n  //                alert('Success! You are now logged in.');\n  //                setTimeout(() => {\n  //                  navigate('/');\n  //              }, 0);\n  //     } catch (err) {\n  //         console.error('Error logging in', err);\n  //         alert('Error: There was an error logging in. Please try again.');\n  //     }\n  // }\n\n  async function logOut() {\n    var res = await logout();\n    if (res) {\n      setCurrentUser(user => ({\n        email: '',\n        name: '',\n        role: '',\n        balance: 0\n      }));\n      setTimeout(() => {\n        navigate('/login');\n      }, 0);\n    } else {\n      alert('There was a problem logging out. Please try again.');\n    }\n  }\n  React.useEffect(() => {\n    setFormFilled(email != '' && password != '');\n  }, [email, password]);\n  return /*#__PURE__*/React.createElement(Card, {\n    bgcolor: \"info\",\n    header: !currentUser.name ? \"Log In\" : \"Logged In\",\n    status: status,\n    body: !currentUser.name ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"form\", null, \"Email Address\", /*#__PURE__*/React.createElement(\"br\", null), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"input\",\n      className: \"form-control\",\n      id: \"email\",\n      placeholder: \"Enter Email Address\",\n      value: email,\n      onChange: e => setEmail(e.currentTarget.value)\n    }), \" \", /*#__PURE__*/React.createElement(\"br\", null), \"Password\", /*#__PURE__*/React.createElement(\"br\", null), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      className: \"form-control\",\n      id: \"password\",\n      placeholder: \"Enter Password\",\n      value: password,\n      onChange: e => setPassword(e.currentTarget.value)\n    }), \" \", /*#__PURE__*/React.createElement(\"br\", null), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-light\",\n      onClick: logIn,\n      disabled: !formFilled\n    }, \"Log In\"), \" \", /*#__PURE__*/React.createElement(\"br\", null))) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", null, \"You are logged in as \", currentUser.name, \". You have access to the site as \", currentUser.role === \"admin\" ? \"an admin\" : \"a customer\", \".\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-light\",\n      onClick: logOut\n    }, \"Log Out\"), \" \", /*#__PURE__*/React.createElement(\"br\", null))\n  });\n}","map":{"version":3,"names":["React","useEffect","useNavigate","Card","CurrentUser","loginFirebase","logout","Login","currentUser","setCurrentUser","useContext","navigate","status","setStatus","useState","email","setEmail","password","setPassword","formFilled","setFormFilled","validate","field","label","setTimeout","logOutUrl","logIn","e","preventDefault","test","alert","length","res","logOut","user","name","role","balance","createElement","bgcolor","header","body","Fragment","type","className","id","placeholder","value","onChange","currentTarget","onClick","disabled"],"sources":["/Users/Regan/Documents/GitHub/BadBank/public/src/Components/login.js"],"sourcesContent":["import React, {useEffect} from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Card, CurrentUser } from \"./context\";\nimport { loginFirebase, logout } from \"./firebase\";\n\nexport default function Login(){\n    const { currentUser, setCurrentUser} = React.useContext(CurrentUser);\n    const navigate = useNavigate();\n    const [status, setStatus] = React.useState('');\n    const [email, setEmail] = React.useState('');\n    const [password, setPassword] = React.useState('');\n    const [formFilled, setFormFilled] = React.useState(true);\n\n\n    function validate(field, label){\n        if (!field) {\n            setStatus('Error: ' + label);\n            setTimeout(() => setStatus(''), 3000); \n            return false;\n        }\n        return true;\n    }\n        const logOutUrl = `/account/logout/`;\n\n        async function logIn(e) {\n            e.preventDefault();\n            if(!validate(email, 'Invalid Email')) return;\n                    if(!validate(password, 'Invalid Password')) return;\n                     if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(email)) {\n                        alert(\"Your email address is not formatted correctly.\")\n                        return;\n                     }\n                     if(password.length<8) {\n                         alert('Your password is incorrect.')\n                         return;\n                     }\n            let res = await loginFirebase(email, password, setCurrentUser);\n            if (!res) {\n                alert('There was an error loggin in. Please try again.');\n            } else {\n                alert('Success! You are now logged in.');\n                               setTimeout(() => {\n                                 navigate('/');\n                             }, 0);\n            }\n        }\n    \n//     async function logIn(e){\n//         e.preventDefault();\n//         if(!validate(email, 'Invalid Email')) return;\n//         if(!validate(password, 'Invalid Password')) return;\n//          if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(email)) {\n//             alert(\"Your email address is not formatted correctly.\")\n//             return;\n//          }\n//          if(password.length<8) {\n//              alert('Your password is incorrect.')\n//              return;\n//          }\n//          await loginFirebase(email, password);\n\n\n//          const url = `/account/login/`;\n//         try {\n//             var res = await fetch(url, {\n//                 method: 'POST',\n//                 headers: {\n//                     'Content-Type': 'application/json',\n//                 },\n//                 body: JSON.stringify({ email, password }),\n//             });\n\n//          var data = await res.json();\n//          if (data.code && data.name === 'FirebaseError') {\n//             alert(\"Something went wrong. Please check your credentials and try again.\")\n//             return;\n//          }\n//              setCurrentUser({\n//                  email: email,\n//                  name: data.name,\n//                  balance: data.balance,\n//                  role: data.role\n//                });  \n \n//                alert('Success! You are now logged in.');\n//                setTimeout(() => {\n//                  navigate('/');\n//              }, 0);\n//     } catch (err) {\n//         console.error('Error logging in', err);\n//         alert('Error: There was an error logging in. Please try again.');\n//     }\n// }\n\n    async function logOut(){\n        var res = await logout();\n        if (res) {\n        setCurrentUser(user => ({\n            email: '',\n            name: '',\n            role: '',\n            balance: 0\n          }));  \n          setTimeout(() => {\n            navigate('/login');\n        }, 0);\n    } else {\n        alert('There was a problem logging out. Please try again.')\n    }\n    }\n\n    React.useEffect(() =>{\n        setFormFilled(email != '' && password != ''); \n    }, [email, password])\n\n    return (\n        <Card \n        bgcolor=\"info\"\n        header={(!currentUser.name) ? \"Log In\" :\"Logged In\"}\n        status={status}\n        body={(!currentUser.name) ? (\n            <>\n            <form>\n            Email Address<br/>\n            <input type=\"input\" className=\"form-control\" id=\"email\" placeholder=\"Enter Email Address\" value={email} onChange={e => setEmail(e.currentTarget.value)} /> <br />\n            Password<br/>\n            <input type=\"password\" className=\"form-control\" id=\"password\" placeholder=\"Enter Password\" value={password} onChange={e => setPassword(e.currentTarget.value)} /> <br />\n            <button type=\"submit\" className=\"btn btn-light\" onClick={logIn} disabled={!formFilled}>Log In</button> <br />\n            </form>\n        </>\n        ) : (\n            <>\n            <p>You are logged in as {currentUser.name}. You have access to the site as {currentUser.role === \"admin\" ? \"an admin\" : \"a customer\" }.</p>\n            <button type=\"submit\" className=\"btn btn-light\" onClick={logOut}>Log Out</button> <br />\n            </>\n        )}\n        />\n    );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}