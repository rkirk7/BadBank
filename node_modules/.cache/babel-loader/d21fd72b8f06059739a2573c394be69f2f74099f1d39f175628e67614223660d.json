{"ast":null,"code":"import React from \"react\";\nimport { Table, CurrentUser } from \"./context\";\nexport default function AllData() {\n  const {\n    currentUser\n  } = React.useContext(CurrentUser);\n  const [data, setData] = React.useState([]);\n  const [activityData, setActivityData] = React.useState([]);\n  let userList;\n  if (currentUser.role === 'admin') {\n    React.useEffect(() => {\n      //fetch all accounts from API\n      fetch('/account/all').then(response => response.json()).then(data => {\n        setData(data);\n      });\n    }, []);\n    userList = Array.isArray(data) && data.map(user => /*#__PURE__*/React.createElement(\"tr\", {\n      key: user._id\n    }, /*#__PURE__*/React.createElement(\"td\", null, user.name), /*#__PURE__*/React.createElement(\"td\", null, \"$\", user.balance), /*#__PURE__*/React.createElement(\"td\", null, user.email), /*#__PURE__*/React.createElement(\"td\", null, user._id)));\n  }\n  React.useEffect(() => {\n    //fetch all accounts from API\n    fetch(\"/account/getActivity/\".concat(currentUser.email, \"/\").concat(currentUser.email)).then(response => response.json()).then(newData => {\n      setActivityData(newData);\n    });\n  }, []);\n  userList = Array.isArray(activityData) && activityData.map(account => /*#__PURE__*/React.createElement(\"tr\", {\n    key: account._id\n  }, /*#__PURE__*/React.createElement(\"td\", null, account.email), /*#__PURE__*/React.createElement(\"td\", null, \"$\", account.activity), /*#__PURE__*/React.createElement(\"td\", null, account.date)));\n  return /*#__PURE__*/React.createElement(\"div\", null, currentUser.role === \"admin\" && /*#__PURE__*/React.createElement(Table, {\n    header: \"User Information\",\n    id: \"usertable\",\n    col1: \"Name\",\n    col2: \"Balance\",\n    col3: \"Email\",\n    col4: \"ID\",\n    list: userList\n  }), /*#__PURE__*/React.createElement(Table, {\n    header: \"Bank Activity\",\n    id: \"activitytable\",\n    col1: \"Email\",\n    col2: \"Activity\",\n    col3: \"Date\",\n    list: userList\n  }));\n}","map":{"version":3,"names":["React","Table","CurrentUser","AllData","currentUser","useContext","data","setData","useState","activityData","setActivityData","userList","role","useEffect","fetch","then","response","json","Array","isArray","map","user","createElement","key","_id","name","balance","email","concat","newData","account","activity","date","header","id","col1","col2","col3","col4","list"],"sources":["/Users/Regan/Documents/GitHub/BadBank/public/src/Components/alldata.js"],"sourcesContent":["import React from \"react\";\nimport {Table, CurrentUser} from \"./context\";\n\n\nexport default function AllData(){\n\n  const { currentUser } = React.useContext(CurrentUser);\n  const [data, setData] = React.useState([]);\n  const [activityData, setActivityData] = React.useState([]);\n  let userList;\n\n  if (currentUser.role === 'admin') {\n  React.useEffect(() => {\n    //fetch all accounts from API\n    fetch('/account/all')\n    .then(response => response.json())\n    .then(data => {\n      setData(data);\n    });\n  }, []);\n\nuserList = Array.isArray(data) && data.map(user => (\n    <tr key={user._id}>\n      <td>{user.name}</td>\n      <td>${user.balance}</td>\n      <td>{user.email}</td>\n      <td>{user._id}</td>\n    </tr>\n  ));\n}\n\nReact.useEffect(() => {\n  //fetch all accounts from API\n  fetch(`/account/getActivity/${currentUser.email}/${currentUser.email}`)\n  .then(response => response.json())\n  .then(newData => {\n    setActivityData(newData);\n  });\n}, []);\n\nuserList = Array.isArray(activityData) && activityData.map(account => (\n  <tr key={account._id}>\n    <td>{account.email}</td>\n    <td>${account.activity}</td>\n    <td>{account.date}</td>\n  </tr>\n));\n\nreturn (\n  <div>\n    \n      {(currentUser.role === \"admin\") &&\n  <Table\n  header=\"User Information\"\n  id=\"usertable\"\n  col1=\"Name\"\n  col2=\"Balance\"\n  col3=\"Email\"\n  col4=\"ID\"\n  list={userList}\n  />\n      }\n\n<Table\n  header=\"Bank Activity\"\n  id=\"activitytable\"\n  col1=\"Email\"\n  col2=\"Activity\"\n  col3=\"Date\"\n  list={userList}\n  />\n  \n  </div>\n\n);\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}