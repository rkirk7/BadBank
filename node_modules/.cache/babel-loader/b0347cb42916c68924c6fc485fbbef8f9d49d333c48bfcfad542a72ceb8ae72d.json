{"ast":null,"code":"import React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Card, CurrentUser, AllActivity } from \"./context\";\nexport default function Login() {\n  const {\n    currentUser,\n    setCurrentUser\n  } = React.useContext(CurrentUser);\n  const navigate = useNavigate();\n  const [status, setStatus] = React.useState('');\n  const [email, setEmail] = React.useState('');\n  const [password, setPassword] = React.useState('');\n  const [formFilled, setFormFilled] = React.useState(true);\n  function validate(field, label) {\n    if (!field) {\n      setStatus('Error: ' + label);\n      setTimeout(() => setStatus(''), 3000);\n      return false;\n    }\n    return true;\n  }\n  const url = \"/account/login/\";\n  const logOutUrl = \"/account/logout/\";\n  async function logIn() {\n    if (!validate(email, 'Invalid Email')) return;\n    if (!validate(password, 'Invalid Password')) return;\n    let success = false;\n    try {\n      var res = await fetch(url, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      var data = await res.json();\n      const token = data.token;\n      if (token) {\n        success = true;\n        setCurrentUser(user => ({\n          email: email,\n          name: data.name,\n          balance: data.balance,\n          role: data.role\n        }));\n        alert('Success! You are now logged in.');\n        setTimeout(() => {\n          navigate('/');\n        }, 0);\n      }\n      if (!success) {\n        alert('Error: Your email or password were incorrect. Please try again.');\n      }\n    } catch (err) {\n      console.error('Error logging in', err);\n      alert('Error: There was an error logging in. Please try again.');\n    }\n  }\n  async function logOut() {\n    var res = await fetch(logOutUrl);\n    if (res) {\n      setCurrentUser(user => ({\n        email: '',\n        name: '',\n        role: '',\n        balance: 0\n      }));\n      setTimeout(() => {\n        navigate('/login');\n      }, 0);\n    } else {\n      alert('There was a problem logging out. Please try again.');\n    }\n  }\n  React.useEffect(() => {\n    setFormFilled(email != '' && password != '');\n  }, [email, password]);\n  return /*#__PURE__*/React.createElement(Card, {\n    bgcolor: \"info\",\n    header: !currentUser.name ? \"Log In\" : \"Logged In\",\n    status: status,\n    body: !currentUser.name ? /*#__PURE__*/React.createElement(React.Fragment, null, \"Email Address\", /*#__PURE__*/React.createElement(\"br\", null), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"input\",\n      className: \"form-control\",\n      id: \"email\",\n      placeholder: \"Enter Email Address\",\n      value: email,\n      onChange: e => setEmail(e.currentTarget.value)\n    }), \" \", /*#__PURE__*/React.createElement(\"br\", null), \"Password\", /*#__PURE__*/React.createElement(\"br\", null), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      className: \"form-control\",\n      id: \"password\",\n      placeholder: \"Enter Password\",\n      value: password,\n      onChange: e => setPassword(e.currentTarget.value)\n    }), \" \", /*#__PURE__*/React.createElement(\"br\", null), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-light\",\n      onClick: logIn,\n      disabled: !formFilled\n    }, \"Log In\"), \" \", /*#__PURE__*/React.createElement(\"br\", null)) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h5\", null, \"Success!\"), /*#__PURE__*/React.createElement(\"p\", null, \"You are logged in as \", currentUser.name, \". You have access to the site as a(n) \", currentUser.role, \".\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-light\",\n      onClick: logOut\n    }, \"Log Out\"), \" \", /*#__PURE__*/React.createElement(\"br\", null))\n  });\n}","map":{"version":3,"names":["React","useNavigate","Card","CurrentUser","AllActivity","Login","currentUser","setCurrentUser","useContext","navigate","status","setStatus","useState","email","setEmail","password","setPassword","formFilled","setFormFilled","validate","field","label","setTimeout","url","logOutUrl","logIn","success","res","fetch","method","headers","body","JSON","stringify","data","json","token","user","name","balance","role","alert","err","console","error","logOut","useEffect","createElement","bgcolor","header","Fragment","type","className","id","placeholder","value","onChange","e","currentTarget","onClick","disabled"],"sources":["/Users/Regan/Documents/GitHub/BadBank/public/src/Components/login.js"],"sourcesContent":["import React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Card, CurrentUser, AllActivity } from \"./context\";\n\nexport default function Login(){\n    const { currentUser, setCurrentUser} = React.useContext(CurrentUser);\n    const navigate = useNavigate();\n    const [status, setStatus] = React.useState('');\n    const [email, setEmail] = React.useState('');\n    const [password, setPassword] = React.useState('');\n    const [formFilled, setFormFilled] = React.useState(true);\n\n\n    function validate(field, label){\n        if (!field) {\n            setStatus('Error: ' + label);\n            setTimeout(() => setStatus(''), 3000); \n            return false;\n        }\n        return true;\n    }\n    \n    const url = `/account/login/`;\n    const logOutUrl = `/account/logout/`;\n    \n    async function logIn(){\n        if(!validate(email, 'Invalid Email')) return;\n        if(!validate(password, 'Invalid Password')) return;\n        let success = false;\n\n        try {\n            var res = await fetch(url, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({ email, password }),\n            });\n\n         var data = await res.json();\n         const token = data.token;\n\n         if (token) {\n             success = true;\n             setCurrentUser(user => ({\n                 email: email,\n                 name: data.name,\n                 balance: data.balance,\n                 role: data.role\n               }));  \n \n               alert('Success! You are now logged in.');\n               setTimeout(() => {\n                 navigate('/');\n             }, 0);\n         }\n\n        if (!success) {\n            alert('Error: Your email or password were incorrect. Please try again.');\n        }\n    } catch (err) {\n        console.error('Error logging in', err);\n        alert('Error: There was an error logging in. Please try again.');\n    }\n}\n\n    async function logOut(){\n        var res = await fetch(logOutUrl);\n        if (res) {\n        setCurrentUser(user => ({\n            email: '',\n            name: '',\n            role: '',\n            balance: 0\n          }));  \n          setTimeout(() => {\n            navigate('/login');\n        }, 0);\n    } else {\n        alert('There was a problem logging out. Please try again.')\n    }\n    }\n\n    React.useEffect(() =>{\n        setFormFilled(email != '' && password != ''); \n    }, [email, password])\n\n    return (\n        <Card \n        bgcolor=\"info\"\n        header={(!currentUser.name) ? \"Log In\" :\"Logged In\"}\n        status={status}\n        body={(!currentUser.name) ? (\n            <>\n            Email Address<br/>\n            <input type=\"input\" className=\"form-control\" id=\"email\" placeholder=\"Enter Email Address\" value={email} onChange={e => setEmail(e.currentTarget.value)} /> <br />\n            Password<br/>\n            <input type=\"password\" className=\"form-control\" id=\"password\" placeholder=\"Enter Password\" value={password} onChange={e => setPassword(e.currentTarget.value)} /> <br />\n            <button type=\"submit\" className=\"btn btn-light\" onClick={logIn} disabled={!formFilled}>Log In</button> <br />\n        </>\n        ) : (\n            <>\n            <h5>Success!</h5>\n            <p>You are logged in as {currentUser.name}. You have access to the site as a(n) {currentUser.role}.</p>\n            <button type=\"submit\" className=\"btn btn-light\" onClick={logOut}>Log Out</button> <br />\n\n            </>\n        )}\n        />\n    );\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,IAAI,EAAEC,WAAW,EAAEC,WAAW,QAAQ,WAAW;AAE1D,eAAe,SAASC,KAAKA,CAAA,EAAE;EAC3B,MAAM;IAAEC,WAAW;IAAEC;EAAc,CAAC,GAAGP,KAAK,CAACQ,UAAU,CAACL,WAAW,CAAC;EACpE,MAAMM,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACS,MAAM,EAAEC,SAAS,CAAC,GAAGX,KAAK,CAACY,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGd,KAAK,CAACY,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACG,QAAQ,EAAEC,WAAW,CAAC,GAAGhB,KAAK,CAACY,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACK,UAAU,EAAEC,aAAa,CAAC,GAAGlB,KAAK,CAACY,QAAQ,CAAC,IAAI,CAAC;EAGxD,SAASO,QAAQA,CAACC,KAAK,EAAEC,KAAK,EAAC;IAC3B,IAAI,CAACD,KAAK,EAAE;MACRT,SAAS,CAAC,SAAS,GAAGU,KAAK,CAAC;MAC5BC,UAAU,CAAC,MAAMX,SAAS,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC;MACrC,OAAO,KAAK;IAChB;IACA,OAAO,IAAI;EACf;EAEA,MAAMY,GAAG,oBAAoB;EAC7B,MAAMC,SAAS,qBAAqB;EAEpC,eAAeC,KAAKA,CAAA,EAAE;IAClB,IAAG,CAACN,QAAQ,CAACN,KAAK,EAAE,eAAe,CAAC,EAAE;IACtC,IAAG,CAACM,QAAQ,CAACJ,QAAQ,EAAE,kBAAkB,CAAC,EAAE;IAC5C,IAAIW,OAAO,GAAG,KAAK;IAEnB,IAAI;MACA,IAAIC,GAAG,GAAG,MAAMC,KAAK,CAACL,GAAG,EAAE;QACvBM,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL,cAAc,EAAE;QACpB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEpB,KAAK;UAAEE;QAAS,CAAC;MAC5C,CAAC,CAAC;MAEL,IAAImB,IAAI,GAAG,MAAMP,GAAG,CAACQ,IAAI,CAAC,CAAC;MAC3B,MAAMC,KAAK,GAAGF,IAAI,CAACE,KAAK;MAExB,IAAIA,KAAK,EAAE;QACPV,OAAO,GAAG,IAAI;QACdnB,cAAc,CAAC8B,IAAI,KAAK;UACpBxB,KAAK,EAAEA,KAAK;UACZyB,IAAI,EAAEJ,IAAI,CAACI,IAAI;UACfC,OAAO,EAAEL,IAAI,CAACK,OAAO;UACrBC,IAAI,EAAEN,IAAI,CAACM;QACb,CAAC,CAAC,CAAC;QAEHC,KAAK,CAAC,iCAAiC,CAAC;QACxCnB,UAAU,CAAC,MAAM;UACfb,QAAQ,CAAC,GAAG,CAAC;QACjB,CAAC,EAAE,CAAC,CAAC;MACT;MAED,IAAI,CAACiB,OAAO,EAAE;QACVe,KAAK,CAAC,iEAAiE,CAAC;MAC5E;IACJ,CAAC,CAAC,OAAOC,GAAG,EAAE;MACVC,OAAO,CAACC,KAAK,CAAC,kBAAkB,EAAEF,GAAG,CAAC;MACtCD,KAAK,CAAC,yDAAyD,CAAC;IACpE;EACJ;EAEI,eAAeI,MAAMA,CAAA,EAAE;IACnB,IAAIlB,GAAG,GAAG,MAAMC,KAAK,CAACJ,SAAS,CAAC;IAChC,IAAIG,GAAG,EAAE;MACTpB,cAAc,CAAC8B,IAAI,KAAK;QACpBxB,KAAK,EAAE,EAAE;QACTyB,IAAI,EAAE,EAAE;QACRE,IAAI,EAAE,EAAE;QACRD,OAAO,EAAE;MACX,CAAC,CAAC,CAAC;MACHjB,UAAU,CAAC,MAAM;QACfb,QAAQ,CAAC,QAAQ,CAAC;MACtB,CAAC,EAAE,CAAC,CAAC;IACT,CAAC,MAAM;MACHgC,KAAK,CAAC,oDAAoD,CAAC;IAC/D;EACA;EAEAzC,KAAK,CAAC8C,SAAS,CAAC,MAAK;IACjB5B,aAAa,CAACL,KAAK,IAAI,EAAE,IAAIE,QAAQ,IAAI,EAAE,CAAC;EAChD,CAAC,EAAE,CAACF,KAAK,EAAEE,QAAQ,CAAC,CAAC;EAErB,oBACIf,KAAA,CAAA+C,aAAA,CAAC7C,IAAI;IACL8C,OAAO,EAAC,MAAM;IACdC,MAAM,EAAG,CAAC3C,WAAW,CAACgC,IAAI,GAAI,QAAQ,GAAE,WAAY;IACpD5B,MAAM,EAAEA,MAAO;IACfqB,IAAI,EAAG,CAACzB,WAAW,CAACgC,IAAI,gBACpBtC,KAAA,CAAA+C,aAAA,CAAA/C,KAAA,CAAAkD,QAAA,QAAE,eACW,eAAAlD,KAAA,CAAA+C,aAAA,WAAI,CAAC,eAClB/C,KAAA,CAAA+C,aAAA;MAAOI,IAAI,EAAC,OAAO;MAACC,SAAS,EAAC,cAAc;MAACC,EAAE,EAAC,OAAO;MAACC,WAAW,EAAC,qBAAqB;MAACC,KAAK,EAAE1C,KAAM;MAAC2C,QAAQ,EAAEC,CAAC,IAAI3C,QAAQ,CAAC2C,CAAC,CAACC,aAAa,CAACH,KAAK;IAAE,CAAE,CAAC,KAAC,eAAAvD,KAAA,CAAA+C,aAAA,WAAK,CAAC,YACzJ,eAAA/C,KAAA,CAAA+C,aAAA,WAAI,CAAC,eACb/C,KAAA,CAAA+C,aAAA;MAAOI,IAAI,EAAC,UAAU;MAACC,SAAS,EAAC,cAAc;MAACC,EAAE,EAAC,UAAU;MAACC,WAAW,EAAC,gBAAgB;MAACC,KAAK,EAAExC,QAAS;MAACyC,QAAQ,EAAEC,CAAC,IAAIzC,WAAW,CAACyC,CAAC,CAACC,aAAa,CAACH,KAAK;IAAE,CAAE,CAAC,KAAC,eAAAvD,KAAA,CAAA+C,aAAA,WAAK,CAAC,eACxK/C,KAAA,CAAA+C,aAAA;MAAQI,IAAI,EAAC,QAAQ;MAACC,SAAS,EAAC,eAAe;MAACO,OAAO,EAAElC,KAAM;MAACmC,QAAQ,EAAE,CAAC3C;IAAW,GAAC,QAAc,CAAC,KAAC,eAAAjB,KAAA,CAAA+C,aAAA,WAAK,CAC9G,CAAC,gBAEC/C,KAAA,CAAA+C,aAAA,CAAA/C,KAAA,CAAAkD,QAAA,qBACAlD,KAAA,CAAA+C,aAAA,aAAI,UAAY,CAAC,eACjB/C,KAAA,CAAA+C,aAAA,YAAG,uBAAqB,EAACzC,WAAW,CAACgC,IAAI,EAAC,wCAAsC,EAAChC,WAAW,CAACkC,IAAI,EAAC,GAAI,CAAC,eACvGxC,KAAA,CAAA+C,aAAA;MAAQI,IAAI,EAAC,QAAQ;MAACC,SAAS,EAAC,eAAe;MAACO,OAAO,EAAEd;IAAO,GAAC,SAAe,CAAC,KAAC,eAAA7C,KAAA,CAAA+C,aAAA,WAAK,CAErF;EACJ,CACD,CAAC;AAEV","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}