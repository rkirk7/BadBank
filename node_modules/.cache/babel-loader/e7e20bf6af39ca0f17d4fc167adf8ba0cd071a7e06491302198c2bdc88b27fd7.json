{"ast":null,"code":"const {\n  initializeApp\n} = require(\"firebase/app\");\nconst {\n  getAuth,\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n  setPersistence,\n  signOut,\n  onAuthStateChanged,\n  browserLocalPersistence,\n  browserSessionPersistence\n} = require(\"firebase/auth\");\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDhKNCusOPW2y52bMwLnOrXIy-u1y1Q4KI\",\n  authDomain: \"bank-f0c47.firebaseapp.com\",\n  projectId: \"bank-f0c47\",\n  storageBucket: \"bank-f0c47.appspot.com\",\n  messagingSenderId: \"710670974978\",\n  appId: \"1:710670974978:web:b724e76530555264b8271b\"\n};\nconst firebaseApp = initializeApp(firebaseConfig);\nconst auth = getAuth();\nasync function createFirebase(name, email, password, persistence, requestedRole, setCurrentUser) {\n  try {\n    if (persistence) {\n      await setPersistence(auth, browserLocalPersistence);\n    } else {\n      await setPersistence(auth, browserSessionPersistence);\n    }\n    const checkUrl = \"/account/checkaccount/\".concat(email);\n    let res = await fetch(checkUrl);\n    let accountExists = await res.json();\n    if (accountExists) {\n      return 'Account exists';\n    } else {\n      await createUserWithEmailAndPassword(auth, email, password, requestedRole);\n      const createUrl = \"/account/createaccount/\".concat(name, \"/\").concat(email, \"/\").concat(requestedRole);\n      let createRes = await fetch(createUrl);\n      if (createRes.ok) {\n        let data = await createRes.json();\n        setCurrentUser(user => ({\n          email: data.email,\n          name: data.name,\n          balance: data.balance,\n          role: data.role\n        }));\n        return 'Account created';\n      } else {\n        return 'Error';\n      }\n    }\n  } catch (error) {\n    console.error('Error creating user with Firebase:', error.code, error.message);\n    return 'Error';\n  }\n}\nasync function loginFirebase(email, password, persistence, setCurrentUser) {\n  try {\n    if (persistence) {\n      await setPersistence(auth, browserLocalPersistence);\n    } else {\n      await setPersistence(auth, browserSessionPersistence);\n    }\n    await signInWithEmailAndPassword(auth, email, password);\n    const url = \"/account/login/\".concat(email);\n    let res = await fetch(url);\n    if (res) {\n      var data = await res.json();\n      setCurrentUser(user => ({\n        email: data.email,\n        name: data.name,\n        balance: data.balance,\n        role: data.role\n      }));\n      return true;\n    } else {\n      setCurrentUser(user => ({\n        email: '',\n        name: '',\n        balance: '',\n        role: ''\n      }));\n      return false;\n    }\n  } catch (error) {\n    setCurrentUser(user => ({\n      email: '',\n      name: '',\n      balance: '',\n      role: ''\n    }));\n    console.error('Error logging in with Firebase:', error.code, error.message);\n    return false;\n  }\n}\nasync function logout() {\n  try {\n    await signOut(auth);\n    return true;\n  } catch (error) {\n    console.error('Error during logout:', error);\n    return false;\n  }\n}\nasync function checkAuthorization(setCurrentUser) {\n  onAuthStateChanged(auth, async user => {\n    if (user) {\n      console.log(\"\".concat(user.email, \" is logged in\"));\n      const url = \"/authorization/\".concat(user.email);\n      let res = await fetch(url);\n      if (res.ok) {\n        let data = await res.json();\n        setCurrentUser(user => ({\n          email: data.email,\n          name: data.name,\n          balance: data.balance,\n          role: data.role\n        }));\n        return true;\n      } else {\n        setCurrentUser(user => ({\n          email: '',\n          name: '',\n          balance: '',\n          role: ''\n        }));\n        return false;\n      }\n    } else {\n      setCurrentUser(user => ({\n        email: '',\n        name: '',\n        balance: '',\n        role: ''\n      }));\n      return false;\n    }\n  });\n}\nexport async function getBalance(setCurrentUser, email) {\n  try {\n    const url = \"/account/balance/\".concat(email);\n    const res = await fetch(url);\n    const data = await res.json();\n    setCurrentUser(user => ({\n      ...user,\n      balance: parseInt(data.balance, 10)\n    }));\n  } catch (error) {\n    console.error('Failed to fetch balance:', error);\n  }\n}\nmodule.exports = {\n  createFirebase,\n  loginFirebase,\n  logout,\n  checkAuthorization,\n  getBalance\n};","map":{"version":3,"names":["initializeApp","require","getAuth","createUserWithEmailAndPassword","signInWithEmailAndPassword","setPersistence","signOut","onAuthStateChanged","browserLocalPersistence","browserSessionPersistence","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseApp","auth","createFirebase","name","email","password","persistence","requestedRole","setCurrentUser","checkUrl","concat","res","fetch","accountExists","json","createUrl","createRes","ok","data","user","balance","role","error","console","code","message","loginFirebase","url","logout","checkAuthorization","log","getBalance","parseInt","module","exports"],"sources":["/Users/Regan/Documents/GitHub/BadBank/public/src/Components/firebase.js"],"sourcesContent":["const { initializeApp } = require(\"firebase/app\");\nconst { getAuth, createUserWithEmailAndPassword, signInWithEmailAndPassword, setPersistence, signOut, onAuthStateChanged, browserLocalPersistence, browserSessionPersistence } = require(\"firebase/auth\");\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyDhKNCusOPW2y52bMwLnOrXIy-u1y1Q4KI\",\n    authDomain: \"bank-f0c47.firebaseapp.com\",\n    projectId: \"bank-f0c47\",\n    storageBucket: \"bank-f0c47.appspot.com\",\n    messagingSenderId: \"710670974978\",\n    appId: \"1:710670974978:web:b724e76530555264b8271b\"\n  };\n  \n  const firebaseApp = initializeApp(firebaseConfig);\n  const auth = getAuth();\n\n  async function createFirebase(name, email, password, persistence, requestedRole, setCurrentUser)\n   {\n    try {\n        if (persistence) {\n        await setPersistence(auth, browserLocalPersistence);\n        } else {\n            await setPersistence(auth, browserSessionPersistence);\n        }\n            const checkUrl = `/account/checkaccount/${email}`;\n            let res = await fetch(checkUrl);\n            let accountExists = await res.json();\n            if (accountExists) {\n           return 'Account exists';\n        } else {\n            await createUserWithEmailAndPassword(auth, email, password, requestedRole);\n            const createUrl = `/account/createaccount/${name}/${email}/${requestedRole}`;\n            let createRes = await fetch(createUrl);\n            if (createRes.ok) {\n            let data = await createRes.json();  \n             setCurrentUser(user => ({\n                email: data.email,\n                name: data.name,\n                balance: data.balance,\n                role: data.role\n                   })); \n            return 'Account created'\n                } else {\n                    return 'Error';\n                  }\n                }\n      } catch (error) {\n        console.error('Error creating user with Firebase:', error.code, error.message);\n        return 'Error';\n      }\n            \n  }\n\n  async function loginFirebase(email, password, persistence, setCurrentUser) {\n    try {\n        if (persistence) {\n            await setPersistence(auth, browserLocalPersistence);\n            } else {\n                await setPersistence(auth, browserSessionPersistence);\n            }\n        await signInWithEmailAndPassword(auth, email, password);\n            const url = `/account/login/${email}`;\n            let res = await fetch(url);\n            if (res) {\n            var data = await res.json();\n        \n            setCurrentUser(user => ({\n                email: data.email,\n                name: data.name,\n                balance: data.balance,\n                role: data.role\n           })); \n           return true;\n        } else {\n            setCurrentUser(user => ({\n                email: '',\n                name: '',\n                balance: '',\n                role: ''\n           })); \n            return false;\n        }\n    } catch (error) {\n        setCurrentUser(user => ({\n            email: '',\n            name: '',\n            balance: '',\n            role: ''\n       })); \n        console.error('Error logging in with Firebase:', error.code, error.message);\n        return false;\n    }\n}\n\nasync function logout() {\n    try {\n        await signOut(auth);\n        return true;\n    } catch (error) {\n        console.error('Error during logout:', error);\n        return false;\n    }\n}\n\nasync function checkAuthorization(setCurrentUser) {\n    onAuthStateChanged(auth, async (user) => {\n        if (user) {\n            console.log(`${user.email} is logged in`);\n            const url = `/authorization/${user.email}`;\n            let res = await fetch(url);\n            if (res.ok) {\n                let data = await res.json();\n                setCurrentUser(user => ({\n                    email: data.email,\n                    name: data.name,\n                    balance: data.balance,\n                    role: data.role\n                }));\n                return true;\n            } else {\n                setCurrentUser(user => ({\n                    email: '',\n                    name: '',\n                    balance: '',\n                    role: ''\n                }));\n                return false;\n            }\n        } else {\n            setCurrentUser(user => ({\n                email: '',\n                name: '',\n                balance: '',\n                role: ''\n            }));\n            return false;\n        }\n    });\n}\n\nexport async function getBalance(setCurrentUser, email) {\n    try {\n        const url = `/account/balance/${email}`;\n        const res = await fetch(url);\n        const data = await res.json();\n        setCurrentUser(user => ({\n            ...user,\n            balance: parseInt(data.balance, 10)\n        }));\n    } catch (error) {\n        console.error('Failed to fetch balance:', error);\n    }\n}\n\n\n  module.exports = {createFirebase, loginFirebase, logout, checkAuthorization, getBalance}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}