{"ast":null,"code":"import React from \"react\";\nimport { Card, CurrentUser, UserContext, AllActivity } from \"./context\";\nexport default function Login() {\n  const currentUser = React.useContext(CurrentUser);\n  const ctx = React.useContext(UserContext);\n  const allActivity = React.useContext(AllActivity);\n  const [status, setStatus] = React.useState('');\n  const [loggedIn, setLoggedIn] = React.useState(currentUser);\n  const [email, setEmail] = React.useState('');\n  const [password, setPassword] = React.useState('');\n  const [formFilled, setFormFilled] = React.useState(true);\n  function validate(field, label) {\n    if (!field) {\n      setStatus('Error: ' + label);\n      setTimeout(() => setStatus(''), 3000);\n      return false;\n    }\n    return true;\n  }\n  function logIn() {\n    if (!validate(email, 'Invalid Email')) return;\n    if (!validate(password, 'Invalid Password')) return;\n    let success = false;\n    ctx.forEach(user => {\n      if (user.email == email && user.password == password) {\n        setLoggedIn({\n          loggedin: true,\n          user: email\n        });\n        success = true;\n        currentUser.key = user.key;\n        currentUser.loggedin = true;\n        currentUser.email = email;\n        currentUser.name = user.name;\n        currentUser.balance = user.balance;\n        let date = new Date();\n        allActivity.push({\n          key: allActivity.length,\n          userID: user.key,\n          name: user.name,\n          activity: \"\".concat(user.name, \" logged in\"),\n          balance: user.balance,\n          time: date\n        });\n      }\n    });\n    if (!success) {\n      alert('Error: Your email or password were incorrect. Please try again, or create a new account.');\n    }\n  }\n  function logOut() {\n    let date = new Date();\n    allActivity.push({\n      key: allActivity.length,\n      userID: currentUser.key,\n      name: currentUser.name,\n      activity: \"\".concat(currentUser.name, \" logged out\"),\n      balance: currentUser.balance,\n      time: date\n    });\n    currentUser.loggedin = false;\n    currentUser.email = '';\n    currentUser.name = '';\n    currentUser.balance = 0;\n    setLoggedIn({\n      key: null,\n      loggedin: false,\n      email: '',\n      name: '',\n      balance: 0\n    });\n  }\n  React.useEffect(() => {\n    setFormFilled(email != '' && password != '');\n  }, [email, password]);\n  return /*#__PURE__*/React.createElement(Card, {\n    bgcolor: \"info\",\n    header: \"Log In\",\n    status: status,\n    body: loggedIn.loggedin == false ? /*#__PURE__*/React.createElement(React.Fragment, null, \"Email Address\", /*#__PURE__*/React.createElement(\"br\", null), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"input\",\n      className: \"form-control\",\n      id: \"email\",\n      placeholder: \"Enter Email Address\",\n      value: email,\n      onChange: e => setEmail(e.currentTarget.value)\n    }), \" \", /*#__PURE__*/React.createElement(\"br\", null), \"Password\", /*#__PURE__*/React.createElement(\"br\", null), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      className: \"form-control\",\n      id: \"password\",\n      placeholder: \"Enter Password\",\n      value: password,\n      onChange: e => setPassword(e.currentTarget.value)\n    }), \" \", /*#__PURE__*/React.createElement(\"br\", null), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-light\",\n      onClick: logIn,\n      disabled: !formFilled\n    }, \"Log In\"), \" \", /*#__PURE__*/React.createElement(\"br\", null)) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h5\", null, \"Success\"), /*#__PURE__*/React.createElement(\"p\", null, \"You are logged in as \", currentUser.name, \".\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-light\",\n      onClick: logOut\n    }, \"Log Out\"), \" \", /*#__PURE__*/React.createElement(\"br\", null))\n  });\n}","map":{"version":3,"names":["React","Card","CurrentUser","UserContext","AllActivity","Login","currentUser","useContext","ctx","allActivity","status","setStatus","useState","loggedIn","setLoggedIn","email","setEmail","password","setPassword","formFilled","setFormFilled","validate","field","label","setTimeout","logIn","success","forEach","user","loggedin","key","name","balance","date","Date","push","length","userID","activity","concat","time","alert","logOut","useEffect","createElement","bgcolor","header","body","Fragment","type","className","id","placeholder","value","onChange","e","currentTarget","onClick","disabled"],"sources":["/Users/Regan/Documents/GitHub/BadBank/public/src/Components/login.js"],"sourcesContent":["import React from \"react\";\nimport { Card, CurrentUser, UserContext, AllActivity } from \"./context\";\n\n\nexport default function Login(){\n    const currentUser = React.useContext(CurrentUser);\n    const ctx = React.useContext(UserContext);\n    const allActivity = React.useContext(AllActivity);\n    const [status, setStatus] = React.useState('');\n    const [loggedIn, setLoggedIn] = React.useState(currentUser);\n    const [email, setEmail] = React.useState('');\n    const [password, setPassword] = React.useState('');\n    const [formFilled, setFormFilled] = React.useState(true);\n\n\n\n    function validate(field, label){\n        if (!field) {\n            setStatus('Error: ' + label);\n            setTimeout(() => setStatus(''), 3000); \n            return false;\n        }\n        return true;\n    }\n\n    function logIn(){\n        if(!validate(email, 'Invalid Email')) return;\n        if(!validate(password, 'Invalid Password')) return;\n        let success = false;\n        ctx.forEach(user => {\n           if (user.email == email && user.password == password) {\n            setLoggedIn({loggedin:true, user:email});\n            success = true;\n            currentUser.key = user.key\n            currentUser.loggedin = true;\n            currentUser.email = email;\n            currentUser.name = user.name;\n            currentUser.balance = user.balance;\n            let date = new Date();\n        allActivity.push({key:allActivity.length, userID:user.key, name:user.name, activity: `${user.name} logged in`, balance:user.balance, time:date})\n\n           }  \n        });\n        if (!success) {\n            alert('Error: Your email or password were incorrect. Please try again, or create a new account.');\n        }\n    }\n\n    function logOut(){\n        let date = new Date();\n        allActivity.push({key:allActivity.length, userID:currentUser.key, name:currentUser.name, activity: `${currentUser.name} logged out`, balance:currentUser.balance, time:date})\n\n            currentUser.loggedin = false;\n            currentUser.email = '';\n            currentUser.name = '';\n            currentUser.balance = 0;\n            setLoggedIn({key:null, loggedin: false, email:'', name:'', balance:0}); \n            \n    }\n\n    React.useEffect(() =>{\n        setFormFilled(email != '' && password != ''); \n    }, [email, password])\n\n    return (\n        <Card \n        bgcolor=\"info\"\n        header=\"Log In\"\n        status={status}\n        body={loggedIn.loggedin == false ? (\n            <>\n            Email Address<br/>\n            <input type=\"input\" className=\"form-control\" id=\"email\" placeholder=\"Enter Email Address\" value={email} onChange={e => setEmail(e.currentTarget.value)} /> <br />\n            Password<br/>\n            <input type=\"password\" className=\"form-control\" id=\"password\" placeholder=\"Enter Password\" value={password} onChange={e => setPassword(e.currentTarget.value)} /> <br />\n            <button type=\"submit\" className=\"btn btn-light\" onClick={logIn} disabled={!formFilled}>Log In</button> <br />\n        </>\n        ) : (\n            <>\n            <h5>Success</h5>\n            <p>You are logged in as {currentUser.name}.</p>\n            <button type=\"submit\" className=\"btn btn-light\" onClick={logOut}>Log Out</button> <br />\n\n            </>\n        )}\n        />\n    );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}